#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
"""

import os
import logging
from typing import Dict, Any, Optional
from pathlib import Path
from dotenv import load_dotenv

logger = logging.getLogger(__name__)

class ConfigManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤."""
    
    def __init__(self, env_file: str = '.env'):
        self.env_file = env_file
        self.config = {}
        self.load_config()
    
    def load_config(self):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ .env —Ñ–∞–π–ª–∞."""
        logger.info(f"üîß –ó–∞–≥—Ä—É–∂–∞—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞: {self.env_file}")
        
        # –ü—Ä–æ–±—É–µ–º load_dotenv
        load_dotenv(self.env_file)
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        if os.path.exists(self.env_file):
            with open(self.env_file, 'r', encoding='utf-8') as f:
                for line in f:
                    line = line.strip()
                    if line and not line.startswith('#') and '=' in line:
                        key, value = line.split('=', 1)
                        key = key.strip()
                        value = value.strip()
                        # –£–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
                        if value.startswith('"') and value.endswith('"'):
                            value = value[1:-1]
                        elif value.startswith("'") and value.endswith("'"):
                            value = value[1:-1]
                        os.environ[key] = value
                        logger.info(f"üîß –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: {key}={value}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        transcription_method = os.getenv('TRANSCRIPTION_METHOD', 'NOT_FOUND')
        logger.info(f"üîß TRANSCRIPTION_METHOD: {transcription_method}")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        self.config['calendar'] = {
            'provider_type': os.getenv('CALENDAR_PROVIDER', 'google_api'),
            'google_api': {
                'credentials_path': os.getenv('GOOGLE_CALENDAR_CREDENTIALS', ''),
                'calendar_id': os.getenv('PERSONAL_CALENDAR_ID', '')
            },
            'notion': {
                'notion_token': os.getenv('NOTION_TOKEN', ''),
                'database_id': os.getenv('NOTION_CALENDAR_DATABASE_ID', '')
            },
            'web_ical': {
                'calendar_url': os.getenv('ICAL_CALENDAR_URL', '')
            },
            'web_rss': {
                'calendar_url': os.getenv('RSS_CALENDAR_URL', '')
            },
            'local_ics': {
                'calendar_file': os.getenv('LOCAL_ICS_FILE', '')
            },
            'local_json': {
                'calendar_file': os.getenv('LOCAL_JSON_FILE', '')
            }
        }
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Drive
        self.config['drive'] = {
            'provider_type': os.getenv('DRIVE_PROVIDER', 'google_api'),
            'google_api': {
                'credentials_path': os.getenv('GOOGLE_DRIVE_CREDENTIALS', '')
            },
            'local': {
                'root_path': os.getenv('LOCAL_DRIVE_ROOT', 'data/local_drive')
            },
            'google_desktop': {
                'drive_path': os.getenv('GOOGLE_DRIVE_DESKTOP_PATH', '')
            }
        }
        
        # –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.config['general'] = {
            'timezone': os.getenv('TIMEZONE', 'Europe/Moscow'),
            'log_level': os.getenv('LOG_LEVEL', 'INFO')
        }
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Whisper –∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏
        self.config['whisper'] = {
            'transcription_method': os.getenv('TRANSCRIPTION_METHOD', 'openai'),
            'openai_api_key': os.getenv('OPENAI_API_KEY', ''),
            'whisper_model': os.getenv('WHISPER_MODEL', 'whisper-1'),
            'whisper_model_local': os.getenv('WHISPER_MODEL_LOCAL', 'base'),
            'whisper_language': os.getenv('WHISPER_LANGUAGE', 'ru'),
            'whisper_task': os.getenv('WHISPER_TASK', 'transcribe'),
            'remove_echo': os.getenv('REMOVE_ECHO', 'true').lower() == 'true',
            'audio_normalize': os.getenv('AUDIO_NORMALIZE', 'true').lower() == 'true',
            'temp_audio_root': os.getenv('TEMP_AUDIO_ROOT', 'data/temp_audio')
        }
        
        logger.info(f"üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Whisper: {self.config['whisper']}")
        logger.info("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
    
    def get_calendar_config(self) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∫–∞–ª–µ–Ω–¥–∞—Ä—è."""
        return self.config['calendar']
    
    def get_drive_config(self) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Google Drive."""
        return self.config['drive']
    
    def get_calendar_provider_type(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–∏–ø –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è."""
        return self.config['calendar']['provider_type']
    
    def get_drive_provider_type(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–∏–ø –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ Google Drive."""
        return self.config['drive']['provider_type']
    
    def get_calendar_provider_config(self) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è."""
        provider_type = self.get_calendar_provider_type()
        return self.config['calendar'].get(provider_type, {})
    
    def get_drive_provider_config(self) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ Google Drive."""
        provider_type = self.get_drive_provider_type()
        return self.config['drive'].get(provider_type, {})
    
    def validate_config(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
        errors = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        calendar_config = self.get_calendar_config()
        provider_type = calendar_config['provider_type']
        provider_config = calendar_config.get(provider_type, {})
        
        if provider_type == 'google_api':
            if not provider_config.get('credentials_path'):
                errors.append("GOOGLE_CALENDAR_CREDENTIALS –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è google_api")
            if not provider_config.get('calendar_id'):
                errors.append("PERSONAL_CALENDAR_ID –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è google_api")
        elif provider_type == 'notion':
            if not provider_config.get('notion_token'):
                errors.append("NOTION_TOKEN –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è notion")
            if not provider_config.get('database_id'):
                errors.append("NOTION_CALENDAR_DATABASE_ID –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è notion")
        elif provider_type == 'web_ical':
            if not provider_config.get('calendar_url'):
                errors.append("ICAL_CALENDAR_URL –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è web_ical")
        elif provider_type == 'web_rss':
            if not provider_config.get('calendar_url'):
                errors.append("RSS_CALENDAR_URL –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è web_rss")
        elif provider_type == 'local_ics':
            if not provider_config.get('calendar_file'):
                errors.append("LOCAL_ICS_FILE –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è local_ics")
        elif provider_type == 'local_json':
            if not provider_config.get('calendar_file'):
                errors.append("LOCAL_JSON_FILE –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è local_json")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Google Drive
        drive_config = self.get_drive_config()
        drive_provider_type = drive_config['provider_type']
        drive_provider_config = drive_config.get(drive_provider_type, {})
        
        if drive_provider_type == 'google_api':
            if not drive_provider_config.get('credentials_path'):
                errors.append("GOOGLE_DRIVE_CREDENTIALS –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è google_api")
        elif drive_provider_type == 'google_desktop':
            if not drive_provider_config.get('drive_path'):
                errors.append("GOOGLE_DRIVE_DESKTOP_PATH –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è google_desktop")
            elif not os.path.exists(drive_provider_config['drive_path']):
                errors.append(f"–ü—É—Ç—å Google Drive –Ω–µ –Ω–∞–π–¥–µ–Ω: {drive_provider_config['drive_path']}")
        
        if errors:
            for error in errors:
                logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {error}")
            return False
        
        logger.info("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        return True
    
    def get(self, key: str, default: Any = None) -> Any:
        """–ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ –∫–ª—é—á—É."""
        # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        value = os.getenv(key)
        if value is not None:
            return value
        
        # –ó–∞—Ç–µ–º –∏—â–µ–º –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if key == 'LOG_LEVEL':
            return self.config['general'].get('log_level', default)
        elif key == 'TIMEZONE':
            return self.config['general'].get('timezone', default)
        
        return default
    
    def get_config_summary(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
        summary = "üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã:\n\n"
        
        # –ö–∞–ª–µ–Ω–¥–∞—Ä—å
        calendar_type = self.get_calendar_provider_type()
        summary += f"üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å: {calendar_type}\n"
        
        if calendar_type == 'google_api':
            config = self.config['calendar']['google_api']
            summary += f"   - –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {config['credentials_path']}\n"
            summary += f"   - ID –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {config['calendar_id']}\n"
        elif calendar_type == 'notion':
            config = self.config['calendar']['notion']
            summary += f"   - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {config['database_id']}\n"
        elif calendar_type in ['web_ical', 'web_rss']:
            config = self.config['calendar'][calendar_type]
            summary += f"   - URL: {config['calendar_url']}\n"
        elif calendar_type in ['local_ics', 'local_json']:
            config = self.config['calendar'][calendar_type]
            summary += f"   - –§–∞–π–ª: {config['calendar_file']}\n"
        
        # Google Drive
        drive_type = self.get_drive_provider_type()
        summary += f"\nüíæ Google Drive: {drive_type}\n"
        
        if drive_type == 'google_api':
            config = self.config['drive']['google_api']
            summary += f"   - –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {config['credentials_path']}\n"
        elif drive_type == 'local':
            config = self.config['drive']['local']
            summary += f"   - –õ–æ–∫–∞–ª—å–Ω–∞—è –ø–∞–ø–∫–∞: {config['root_path']}\n"
        elif drive_type == 'google_desktop':
            config = self.config['drive']['google_desktop']
            summary += f"   - –ü—É—Ç—å: {config['drive_path']}\n"
        
        return summary
    
    def update_config(self, section: str, key: str, value: str):
        """–û–±–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
        if section in self.config and key in self.config[section]:
            self.config[section][key] = value
            logger.info(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {section}.{key} = {value}")
        else:
            logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {section}.{key}")
    
    def save_to_env(self):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ .env —Ñ–∞–π–ª."""
        try:
            env_lines = []
            
            # –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env —Ñ–∞–π–ª
            if os.path.exists(self.env_file):
                with open(self.env_file, 'r', encoding='utf-8') as f:
                    existing_lines = f.readlines()
                
                # –§–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ–º
                for line in existing_lines:
                    if not any(key in line for key in [
                        'CALENDAR_PROVIDER', 'DRIVE_PROVIDER',
                        'GOOGLE_CALENDAR_CREDENTIALS', 'PERSONAL_CALENDAR_ID',
                        'NOTION_CALENDAR_DATABASE_ID', 'ICAL_CALENDAR_URL',
                        'RSS_CALENDAR_URL', 'LOCAL_ICS_FILE', 'LOCAL_JSON_FILE',
                        'GOOGLE_DRIVE_CREDENTIALS', 'LOCAL_DRIVE_ROOT',
                        'GOOGLE_DRIVE_DESKTOP_PATH'
                    ]):
                        env_lines.append(line)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            env_lines.append(f"\n# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã\n")
            env_lines.append(f"CALENDAR_PROVIDER={self.config['calendar']['provider_type']}\n")
            env_lines.append(f"DRIVE_PROVIDER={self.config['drive']['provider_type']}\n")
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
            calendar_type = self.config['calendar']['provider_type']
            if calendar_type == 'google_api':
                config = self.config['calendar']['google_api']
                env_lines.append(f"GOOGLE_CALENDAR_CREDENTIALS={config['credentials_path']}\n")
                env_lines.append(f"PERSONAL_CALENDAR_ID={config['calendar_id']}\n")
            elif calendar_type == 'notion':
                config = self.config['calendar']['notion']
                env_lines.append(f"NOTION_CALENDAR_DATABASE_ID={config['database_id']}\n")
            elif calendar_type == 'web_ical':
                config = self.config['calendar']['web_ical']
                env_lines.append(f"ICAL_CALENDAR_URL={config['calendar_url']}\n")
            elif calendar_type == 'web_rss':
                config = self.config['calendar']['web_rss']
                env_lines.append(f"RSS_CALENDAR_URL={config['calendar_url']}\n")
            elif calendar_type == 'local_ics':
                config = self.config['calendar']['local_ics']
                env_lines.append(f"LOCAL_ICS_FILE={config['calendar_file']}\n")
            elif calendar_type == 'local_json':
                config = self.config['calendar']['local_json']
                env_lines.append(f"LOCAL_JSON_FILE={config['calendar_file']}\n")
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Drive
            drive_type = self.config['drive']['provider_type']
            if drive_type == 'google_api':
                config = self.config['drive']['google_api']
                env_lines.append(f"GOOGLE_DRIVE_CREDENTIALS={config['credentials_path']}\n")
            elif drive_type == 'local':
                config = self.config['drive']['local']
                env_lines.append(f"LOCAL_DRIVE_ROOT={config['root_path']}\n")
            elif drive_type == 'google_desktop':
                config = self.config['drive']['google_desktop']
                env_lines.append(f"GOOGLE_DRIVE_DESKTOP_PATH={config['drive_path']}\n")
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ .env —Ñ–∞–π–ª
            with open(self.env_file, 'w', encoding='utf-8') as f:
                f.writelines(env_lines)
            
            logger.info(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {self.env_file}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")

def create_sample_env():
    """–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–º–µ—Ä .env —Ñ–∞–π–ª–∞ —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏."""
    sample_env = """# Google API (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–ø–æ—Å–æ–±)
GOOGLE_CREDENTIALS=creds/client_secret.json
PERSONAL_CALENDAR_ID=your_calendar_id
PERSONAL_DRIVE_PARENT_ID=your_drive_folder_id

# Notion
NOTION_TOKEN=your_notion_token
NOTION_DATABASE_ID=your_database_id

# Telegram
TELEGRAM_BOT_TOKEN=your_bot_token
TELEGRAM_CHAT_ID=your_chat_id

# –ú–µ–¥–∏–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞
MEDIA_OUTPUT_FORMAT=mp3
MEDIA_QUALITY=medium
MEDIA_SYNC_ROOT=data/synced
MEDIA_CLEANUP_DAYS=30

# –ö–æ–º–ø—Ä–µ—Å—Å–∏—è –≤–∏–¥–µ–æ
VIDEO_COMPRESSION=true
VIDEO_QUALITY=medium
VIDEO_CODEC=h264

# –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞
TIMEZONE=Europe/Moscow

# ========================================
# –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï –ü–†–û–í–ê–ô–î–ï–†–´
# ========================================

# –¢–∏–ø –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è (google_api, notion, web_ical, web_rss, local_ics, local_json)
CALENDAR_PROVIDER=google_api

# –¢–∏–ø –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ Google Drive (google_api, local, google_desktop)
DRIVE_PROVIDER=google_api

# ========================================
# –ù–ê–°–¢–†–û–ô–ö–ò –î–õ–Ø –†–ê–ó–ù–´–• –ü–†–û–í–ê–ô–î–ï–†–û–í
# ========================================

# Notion –∫–∞–ª–µ–Ω–¥–∞—Ä—å
NOTION_CALENDAR_DATABASE_ID=your_calendar_database_id

# –í–µ–±-–∫–∞–ª–µ–Ω–¥–∞—Ä–∏ (iCal, RSS)
ICAL_CALENDAR_URL=https://calendar.google.com/calendar/ical/your_calendar_id/basic.ics
RSS_CALENDAR_URL=https://calendar.google.com/calendar/feeds/your_calendar_id/public/basic

# –õ–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è
LOCAL_ICS_FILE=data/calendar/events.ics
LOCAL_JSON_FILE=data/calendar/events.json

# –õ–æ–∫–∞–ª—å–Ω–∞—è —Ñ–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞
LOCAL_DRIVE_ROOT=data/local_drive

# Google Drive –¥–ª—è Desktop
GOOGLE_DRIVE_DESKTOP_PATH=/Users/username/Google Drive
"""
    
    with open('.env.sample', 'w', encoding='utf-8') as f:
        f.write(sample_env)
    
    logger.info("–°–æ–∑–¥–∞–Ω –ø—Ä–∏–º–µ—Ä .env —Ñ–∞–π–ª–∞: .env.sample")

if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    create_sample_env()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    config = ConfigManager()
    print(config.get_config_summary())
    
    if config.validate_config():
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    else:
        print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏")
