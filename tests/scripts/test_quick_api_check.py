#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö API
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
"""

import os
import sys
import json
from datetime import datetime
from google.oauth2.credentials import Credentials
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError
import requests
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_notion_api():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Notion API"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º Notion API...")
    
    notion_token = os.getenv('NOTION_TOKEN')
    database_id = os.getenv('NOTION_DATABASE_ID')
    
    if not notion_token or not database_id:
        print("  ‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Notion –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return False
    
    try:
        headers = {
            'Authorization': f'Bearer {notion_token}',
            'Content-Type': 'application/json',
            'Notion-Version': '2022-06-28'
        }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        url = f'https://api.notion.com/v1/databases/{database_id}'
        response = requests.get(url, headers=headers)
        
        if response.status_code == 200:
            db_info = response.json()
            title = db_info.get('title', [{}])[0].get('plain_text', 'N/A')
            print(f"  ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {title}")
            return True
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_google_calendar(oauth_client, token_path, account_name):
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Google Calendar"""
    print(f"üìÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º Google Calendar ({account_name})...")
    
    try:
        if not os.path.exists(token_path):
            print(f"  ‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω: {token_path}")
            return False
        
        creds = Credentials.from_authorized_user_file(token_path)
        service = build('calendar', 'v3', credentials=creds)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π
        calendars = service.calendarList().list(maxResults=5).execute()
        calendar_count = len(calendars.get('items', []))
        
        print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π: {calendar_count}")
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_google_drive(oauth_client, token_path, account_name):
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Google Drive"""
    print(f"üìÅ –¢–µ—Å—Ç–∏—Ä—É–µ–º Google Drive ({account_name})...")
    
    try:
        if not os.path.exists(token_path):
            print(f"  ‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω: {token_path}")
            return False
        
        creds = Credentials.from_authorized_user_file(token_path)
        service = build('drive', 'v3', credentials=creds)
        
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        about = service.about().get(fields="user").execute()
        user = about.get('user', {})
        email = user.get('emailAddress', 'N/A')
        
        print(f"  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {email}")
        return True
        
    except HttpError as e:
        if e.status_code == 403:
            print(f"  ‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞: API –Ω–µ –≤–∫–ª—é—á–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤")
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞: {e.status_code} - {e.reason}")
        return False
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_environment_variables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    required_vars = [
        'NOTION_TOKEN',
        'NOTION_DATABASE_ID',
        'PERSONAL_GOOGLE_OAUTH_CLIENT',
        'PERSONAL_GOOGLE_TOKEN',
        'PERSONAL_CALENDAR_ID',
        'WORK_GOOGLE_OAUTH_CLIENT',
        'WORK_GOOGLE_TOKEN',
        'WORK_CALENDAR_ID'
    ]
    
    missing = []
    for var in required_vars:
        if not os.getenv(var):
            missing.append(var)
    
    if missing:
        print(f"  ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing)}")
        return False
    else:
        print(f"  ‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã ({len(required_vars)})")
        return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üöÄ –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –í–°–ï–• API")
    print("=" * 50)
    
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    print(f"‚è∞ –í—Ä–µ–º—è: {timestamp}")
    
    results = {}
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_ok = check_environment_variables()
    results['environment'] = env_ok
    
    if not env_ok:
        print("\n‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö")
        return
    
    print("\n" + "=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Notion
    results['notion'] = test_notion_api()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Google Calendar
    personal_oauth = os.getenv('PERSONAL_GOOGLE_OAUTH_CLIENT')
    personal_token = os.getenv('PERSONAL_GOOGLE_TOKEN')
    work_oauth = os.getenv('WORK_GOOGLE_OAUTH_CLIENT')
    work_token = os.getenv('WORK_GOOGLE_TOKEN')
    
    results['calendar_personal'] = test_google_calendar(personal_oauth, personal_token, "–õ–∏—á–Ω—ã–π")
    results['calendar_work'] = test_google_calendar(work_oauth, work_token, "–†–∞–±–æ—á–∏–π")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Google Drive
    results['drive_personal'] = test_google_drive(personal_oauth, personal_token, "–õ–∏—á–Ω—ã–π")
    results['drive_work'] = test_google_drive(work_oauth, work_token, "–†–∞–±–æ—á–∏–π")
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 50)
    
    services = [
        ("üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è", results['environment']),
        ("üìã Notion API", results['notion']),
        ("üìÖ Calendar (–õ–∏—á–Ω—ã–π)", results['calendar_personal']),
        ("üìÖ Calendar (–†–∞–±–æ—á–∏–π)", results['calendar_work']),
        ("üìÅ Drive (–õ–∏—á–Ω—ã–π)", results['drive_personal']),
        ("üìÅ Drive (–†–∞–±–æ—á–∏–π)", results['drive_work'])
    ]
    
    working_count = 0
    total_count = len(services)
    
    for service_name, status in services:
        status_text = "‚úÖ –†–ê–ë–û–¢–ê–ï–¢" if status else "‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
        print(f"{service_name}: {status_text}")
        if status:
            working_count += 1
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    percentage = (working_count / total_count) * 100
    print(f"\nüìà –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã: {working_count}/{total_count} ({percentage:.0f}%)")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    
    if working_count == total_count:
        print("  üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
    elif results['notion'] and (results['calendar_personal'] or results['calendar_work']):
        print("  ‚úÖ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç (Calendar + Notion).")
        if not results['drive_personal'] and not results['drive_work']:
            print("  üîß –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –≤–∫–ª—é—á–∏—Ç–µ Google Drive API.")
    else:
        print("  ‚ö†Ô∏è –ï—Å—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞.")
    
    print(f"\n{'=' * 50}")
    print("üéä –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == '__main__':
    main()
