#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram –æ—Ç—á–µ—Ç–∞
"""

import os
import sys
from dotenv import load_dotenv
import requests
from datetime import datetime, timedelta
import json

def create_telegram_report(
    total_events: int,
    total_filtered: int,
    total_excluded: int,
    processed_events: list,
    excluded_events: list,
    days: int,
    limit: int
) -> str:
    """–°–æ–∑–¥–∞—ë—Ç –∫—Ä–∞—Å–∏–≤—ã–π –æ—Ç—á—ë—Ç –¥–ª—è Telegram."""
    
    # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
    emoji_stats = "üìä"
    emoji_success = "‚úÖ"
    emoji_excluded = "‚ùå"
    emoji_processed = "üìÅ"
    emoji_time = "‚è∞"
    emoji_calendar = "üìÖ"
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—á–µ—Ç–∞
    report = f"{emoji_stats} *–û–¢–ß–ï–¢ –û–ë –û–ë–†–ê–ë–û–¢–ö–ï –í–°–¢–†–ï–ß*\n\n"
    
    # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    report += f"{emoji_calendar} *–ü–µ—Ä–∏–æ–¥:* {days} {'–¥–µ–Ω—å' if days == 1 else '–¥–Ω–µ–π'}\n"
    if limit:
        report += f"{emoji_time} *–õ–∏–º–∏—Ç:* {limit} –≤—Å—Ç—Ä–µ—á\n"
    report += f"\n"
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π
    report += f"{emoji_stats} *–°–¢–ê–¢–ò–°–¢–ò–ö–ê:*\n"
    report += f"‚Ä¢ –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {total_events}\n"
    report += f"‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≤—Å—Ç—Ä–µ—á: {total_filtered}\n"
    report += f"‚Ä¢ –ò—Å–∫–ª—é—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {total_excluded}\n\n"
    
    # –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏
    if processed_events:
        report += f"{emoji_processed} *–û–ë–†–ê–ë–û–¢–ê–ù–ù–´–ï –í–°–¢–†–ï–ß–ò:*\n"
        for i, event in enumerate(processed_events[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            title = event.get("summary", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
            start = event.get("start", {}).get("dateTime") or event.get("start", {}).get("date")
            
            if start:
                try:
                    start_str = start.replace('Z', '+00:00')
                    start_dt = datetime.fromisoformat(start_str)
                    time_str = start_dt.strftime("%d.%m %H:%M")
                    report += f"{i}. {time_str} | {title}\n"
                except:
                    report += f"{i}. {title}\n"
            else:
                report += f"{i}. {title}\n"
        
        if len(processed_events) > 10:
            report += f"... –∏ –µ—â–µ {len(processed_events) - 10} –≤—Å—Ç—Ä–µ—á\n"
        report += "\n"
    
    # –ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
    if excluded_events:
        report += f"{emoji_excluded} *–ò–°–ö–õ–Æ–ß–ï–ù–ù–´–ï –°–û–ë–´–¢–ò–Ø:*\n"
        for i, title in enumerate(excluded_events[:5], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            report += f"‚Ä¢ {title}\n"
        if len(excluded_events) > 5:
            report += f"... –∏ –µ—â–µ {len(excluded_events) - 5} —Å–æ–±—ã—Ç–∏–π\n"
        report += "\n"
    
    # –ò—Ç–æ–≥
    report += f"{emoji_success} *–ò–¢–û–ì:* –°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∞ {total_filtered} –≤—Å—Ç—Ä–µ—á"
    if total_excluded > 0:
        report += f" –∏ –∏—Å–∫–ª—é—á–∏–ª–∞ {total_excluded} –ª–∏—á–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π"
    report += "."
    
    return report

def test_telegram_report():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ Telegram –æ—Ç—á–µ—Ç–∞."""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    total_events = 5
    total_filtered = 3
    total_excluded = 2
    days = 7
    limit = 5
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è
    processed_events = [
        {
            "summary": "–¢–µ—Å—Ç–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞",
            "start": {"dateTime": "2025-08-21T18:00:00Z"},
            "end": {"dateTime": "2025-08-21T19:00:00Z"}
        },
        {
            "summary": "–û—Ç—á–µ—Ç –ø–æ –ò–ü",
            "start": {"dateTime": "2025-08-25T09:00:00Z"},
            "end": {"dateTime": "2025-08-25T10:00:00Z"}
        },
        {
            "summary": "–í—Å—Ç—Ä–µ—á–∞ —Å –∫–ª–∏–µ–Ω—Ç–æ–º",
            "start": {"dateTime": "2025-08-28T14:30:00Z"},
            "end": {"dateTime": "2025-08-28T15:30:00Z"}
        }
    ]
    
    excluded_events = [
        "–ê–Ω–¥—Ä–µ–π –ì–æ–ª—É–±–µ–≤ –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è",
        "–¢–∞—Ç—å—è–Ω–∞ –§–∞–π–Ω—à—Ç–µ–π–Ω –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è"
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ Telegram –æ—Ç—á–µ—Ç–∞...")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞—ë–º –æ—Ç—á—ë—Ç
    report = create_telegram_report(
        total_events=total_events,
        total_filtered=total_filtered,
        total_excluded=total_excluded,
        processed_events=processed_events,
        excluded_events=excluded_events,
        days=days,
        limit=limit
    )
    
    print("üì± –°–æ–∑–¥–∞–Ω–Ω—ã–π –æ—Ç—á—ë—Ç:")
    print("-" * 30)
    print(report)
    print("-" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –æ—Ç—á–µ—Ç–∞
    report_length = len(report)
    print(f"üìè –î–ª–∏–Ω–∞ –æ—Ç—á–µ—Ç–∞: {report_length} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    checks = [
        ("–ó–∞–≥–æ–ª–æ–≤–æ–∫", "–û–¢–ß–ï–¢ –û–ë –û–ë–†–ê–ë–û–¢–ö–ï –í–°–¢–†–ï–ß" in report),
        ("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "–°–¢–ê–¢–ò–°–¢–ò–ö–ê" in report),
        ("–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏", "–û–ë–†–ê–ë–û–¢–ê–ù–ù–´–ï –í–°–¢–†–ï–ß–ò" in report),
        ("–ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è", "–ò–°–ö–õ–Æ–ß–ï–ù–ù–´–ï –°–û–ë–´–¢–ò–Ø" in report),
        ("–ò—Ç–æ–≥", "–ò–¢–û–ì" in report),
        ("–≠–º–æ–¥–∑–∏", "üìä" in report and "‚úÖ" in report and "‚ùå" in report)
    ]
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—Ç—á–µ—Ç–∞:")
    for check_name, result in checks:
        status = "‚úÖ" if result else "‚ùå"
        print(f"  {status} {check_name}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
    time_checks = [
        "21.08 18:00" in report,
        "25.08 09:00" in report,
        "28.08 14:30" in report
    ]
    
    print("\n‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏:")
    for i, result in enumerate(time_checks):
        status = "‚úÖ" if result else "‚ùå"
        time_str = ["21.08 18:00", "25.08 09:00", "28.08 14:30"][i]
        print(f"  {status} {time_str}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats_checks = [
        f"–í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {total_events}" in report,
        f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≤—Å—Ç—Ä–µ—á: {total_filtered}" in report,
        f"–ò—Å–∫–ª—é—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {total_excluded}" in report
    ]
    
    print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:")
    for i, result in enumerate(stats_checks):
        status = "‚úÖ" if result else "‚ùå"
        stat_name = ["–í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π", "–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≤—Å—Ç—Ä–µ—á", "–ò—Å–∫–ª—é—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π"][i]
        print(f"  {status} {stat_name}")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    all_checks = [check[1] for check in checks] + time_checks + stats_checks
    success_rate = sum(all_checks) / len(all_checks) * 100
    
    print(f"\nüéØ –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞: {success_rate:.1f}%")
    
    if success_rate >= 90:
        print("üéâ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω –æ—Ç–ª–∏—á–Ω–æ!")
    elif success_rate >= 70:
        print("‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω —Ö–æ—Ä–æ—à–æ!")
    else:
        print("‚ö†Ô∏è –û—Ç—á–µ—Ç —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏!")
    
    return report

def send_test_report():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç –≤ Telegram."""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    chat_id = os.getenv("TELEGRAM_CHAT_ID")
    
    if not token or not chat_id:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –≤ .env")
        return False
    
    print(f"\nüì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç –≤ Telegram...")
    print(f"Bot Token: {token[:10]}...")
    print(f"Chat ID: {chat_id}")
    
    # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á—ë—Ç
    report = test_telegram_report()
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
        response = requests.get(
            f"https://api.telegram.org/bot{token}/sendMessage",
            params={
                "chat_id": chat_id,
                "text": report,
                "parse_mode": "Markdown"
            },
            timeout=15
        )
        response.raise_for_status()
        
        result = response.json()
        if result.get("ok"):
            print("‚úÖ –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!")
            print(f"Message ID: {result['result']['message_id']}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {result}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –æ—Ç—á–µ—Ç–∞")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞:")
    test_telegram_report()
    
    # –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:")
    send_test_report()
    
    print("\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
