#!/usr/bin/env python3
"""
–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö Google API –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∏ —Ä–∞–±–æ—á–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ Calendar –∏ Drive API —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ scope
"""

import os
import sys
import json
from datetime import datetime
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# Scope –¥–ª—è Google APIs
CALENDAR_SCOPES = ['https://www.googleapis.com/auth/calendar.readonly']
DRIVE_SCOPES = [
    'https://www.googleapis.com/auth/drive',
    'https://www.googleapis.com/auth/drive.file',
    'https://www.googleapis.com/auth/drive.readonly',
    'https://www.googleapis.com/auth/drive.metadata.readonly'
]

def print_section(title, char="="):
    """–ü–µ—á–∞—Ç–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –¥–ª—è —Å–µ–∫—Ü–∏–π"""
    print(f"\n{char * 80}")
    print(f"üéØ {title}")
    print(f"{char * 80}")

def analyze_token(token_path, account_name):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–æ–∫–µ–Ω–∞"""
    print(f"\nüîç –ê–Ω–∞–ª–∏–∑ —Ç–æ–∫–µ–Ω–∞ {account_name}: {token_path}")
    
    if not os.path.exists(token_path):
        print("‚ùå –§–∞–π–ª —Ç–æ–∫–µ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None
    
    try:
        with open(token_path, 'r') as f:
            token_data = json.load(f)
        
        print("‚úÖ –¢–æ–∫–µ–Ω –ø—Ä–æ—á–∏—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"  Client ID: {token_data.get('client_id', 'N/A')}")
        print(f"  Account: {token_data.get('account', 'N/A')}")
        print(f"  Expiry: {token_data.get('expiry', 'N/A')}")
        print(f"  –û–±–ª–∞—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–∞:")
        
        scopes = token_data.get('scopes', [])
        if isinstance(scopes, str):
            scopes = scopes.split(' ')
        
        for scope in scopes:
            if scope.strip():
                print(f"    - {scope}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö scopes
        calendar_scopes = [s for s in scopes if 'calendar' in s]
        drive_scopes = [s for s in scopes if 'drive' in s]
        
        print(f"  üóìÔ∏è Calendar scopes: {len(calendar_scopes)}")
        print(f"  üìÅ Drive scopes: {len(drive_scopes)}")
        
        return token_data
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–∫–µ–Ω–∞: {e}")
        return None

def get_service(oauth_client_path, token_path, scopes, service_name, version):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–µ—Ä–≤–∏—Å Google API"""
    if not os.path.exists(oauth_client_path):
        print(f"‚ùå OAuth client –Ω–µ –Ω–∞–π–¥–µ–Ω: {oauth_client_path}")
        return None
    
    creds = None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–∫–µ–Ω
    if os.path.exists(token_path):
        try:
            creds = Credentials.from_authorized_user_file(token_path, scopes)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–∫–µ–Ω–∞: {e}")
            return None
    
    # –ï—Å–ª–∏ –Ω–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            try:
                creds.refresh(Request())
                print("‚úÖ –¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")
                creds = None
        
        if not creds:
            try:
                flow = InstalledAppFlow.from_client_secrets_file(oauth_client_path, scopes)
                creds = flow.run_local_server(port=0)
                print("‚úÖ –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")
                return None
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
        try:
            with open(token_path, 'w') as token:
                token.write(creds.to_json())
            print(f"‚úÖ –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")
    
    try:
        service = build(service_name, version, credentials=creds)
        print(f"‚úÖ {service_name.title()} —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω")
        return service
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {service_name} —Å–µ—Ä–≤–∏—Å–∞: {e}")
        return None

def test_calendar_api(service, account_name):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Calendar API"""
    print(f"\nüìÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º Calendar API –¥–ª—è {account_name}...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π
        calendars = service.calendarList().list().execute()
        calendar_list = calendars.get('items', [])
        print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π: {len(calendar_list)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        for i, calendar in enumerate(calendar_list[:3]):
            print(f"    {i+1}. {calendar.get('summary', 'N/A')} ({calendar.get('id', 'N/A')})")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        primary_calendar = calendar_list[0] if calendar_list else None
        if primary_calendar:
            events = service.events().list(
                calendarId=primary_calendar['id'],
                maxResults=5,
                singleEvents=True,
                orderBy='startTime',
                timeMin=datetime.utcnow().isoformat() + 'Z'
            ).execute()
            
            event_list = events.get('items', [])
            print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —Å–æ–±—ã—Ç–∏–π: {len(event_list)}")
            
            for i, event in enumerate(event_list[:3]):
                title = event.get('summary', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
                start = event.get('start', {}).get('dateTime', event.get('start', {}).get('date', 'N/A'))
                print(f"    {i+1}. {title} ({start})")
        
        return True
        
    except HttpError as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ Calendar API: {e.status_code} - {e.reason}")
        return False
    except Exception as e:
        print(f"  ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ Calendar API: {e}")
        return False

def test_drive_api(service, account_name, scope_name):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Drive API"""
    print(f"\nüìÅ –¢–µ—Å—Ç–∏—Ä—É–µ–º Drive API –¥–ª—è {account_name} (scope: {scope_name})...")
    
    try:
        # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        print("  üìã –¢–µ—Å—Ç 1: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ...")
        about = service.about().get(fields="user,storageQuota").execute()
        user_info = about.get('user', {})
        storage = about.get('storageQuota', {})
        
        print(f"    ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info.get('displayName', 'N/A')} ({user_info.get('emailAddress', 'N/A')})")
        
        used = int(storage.get('usage', 0))
        limit = int(storage.get('limit', 0))
        if limit > 0:
            used_gb = used / (1024**3)
            limit_gb = limit / (1024**3)
            print(f"    üìä –•—Ä–∞–Ω–∏–ª–∏—â–µ: {used_gb:.1f} GB / {limit_gb:.1f} GB")
        
        # –¢–µ—Å—Ç 2: –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π)
        print("  üìÅ –¢–µ—Å—Ç 2: –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤...")
        files = service.files().list(
            pageSize=10, 
            fields="files(id,name,mimeType,modifiedTime)",
            orderBy="modifiedTime desc"
        ).execute()
        
        file_list = files.get('files', [])
        print(f"    ‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(file_list)}")
        
        for i, file in enumerate(file_list[:3]):
            name = file.get('name', 'N/A')
            mime_type = file.get('mimeType', 'N/A')
            modified = file.get('modifiedTime', 'N/A')
            print(f"      {i+1}. {name} ({mime_type}) - {modified}")
        
        # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –ø–∞–ø–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞–ø–∏—Å–∏)
        if 'readonly' not in scope_name:
            print("  üìÇ –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –ø–∞–ø–∫–∏...")
            folder_metadata = {
                'name': f'Test_{account_name}_{datetime.now().strftime("%Y%m%d_%H%M%S")}',
                'mimeType': 'application/vnd.google-apps.folder'
            }
            
            folder = service.files().create(body=folder_metadata, fields='id,name').execute()
            folder_id = folder.get('id')
            print(f"    ‚úÖ –ü–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: {folder.get('name')} (ID: {folder_id})")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞–ø–∫—É
            service.files().delete(fileId=folder_id).execute()
            print(f"    ‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –ø–∞–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞")
        else:
            print("  üìÇ –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ (–ø—Ä–æ–ø—É—â–µ–Ω–æ - readonly scope)")
        
        return True
        
    except HttpError as e:
        error_details = e.error_details[0] if e.error_details else {}
        print(f"    ‚ùå –û—à–∏–±–∫–∞ Drive API: {e.status_code} - {e.reason}")
        print(f"      –î–µ—Ç–∞–ª–∏: {error_details}")
        return False
    except Exception as e:
        print(f"    ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ Drive API: {e}")
        return False

def test_account(account_type, oauth_client_path, token_path, calendar_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–¥–∏–Ω –∞–∫–∫–∞—É–Ω—Ç (–ª–∏—á–Ω—ã–π –∏–ª–∏ —Ä–∞–±–æ—á–∏–π)"""
    print_section(f"–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {account_type} –∞–∫–∫–∞—É–Ω—Ç–∞", "=")
    
    results = {
        'account_type': account_type,
        'calendar_api': False,
        'drive_scopes': {}
    }
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
    token_data = analyze_token(token_path, account_type)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Calendar API
    print(f"\nüìÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º Google Calendar API...")
    calendar_service = get_service(oauth_client_path, token_path, CALENDAR_SCOPES, 'calendar', 'v3')
    if calendar_service:
        results['calendar_api'] = test_calendar_api(calendar_service, account_type)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Drive API —Å —Ä–∞–∑–Ω—ã–º–∏ scopes
    print(f"\nüìÅ –¢–µ—Å—Ç–∏—Ä—É–µ–º Google Drive API...")
    for scope in DRIVE_SCOPES:
        print(f"\n{'‚îÄ' * 60}")
        print(f"üîç Scope: {scope}")
        print(f"{'‚îÄ' * 60}")
        
        drive_service = get_service(oauth_client_path, token_path, [scope], 'drive', 'v3')
        if drive_service:
            success = test_drive_api(drive_service, account_type, scope)
            results['drive_scopes'][scope] = success
        else:
            results['drive_scopes'][scope] = False
    
    return results

def generate_report(personal_results, work_results):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç"""
    print_section("–ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø", "=")
    
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\nüìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–Ω–∞ {timestamp}):")
    
    accounts = [
        ("–õ–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç", personal_results),
        ("–†–∞–±–æ—á–∏–π –∞–∫–∫–∞—É–Ω—Ç", work_results)
    ]
    
    for account_name, results in accounts:
        print(f"\nüéØ {account_name}:")
        
        # Calendar API
        calendar_status = "‚úÖ –†–ê–ë–û–¢–ê–ï–¢" if results['calendar_api'] else "‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
        print(f"  üìÖ Calendar API: {calendar_status}")
        
        # Drive API scopes
        drive_working = [s for s, r in results['drive_scopes'].items() if r]
        drive_total = len(results['drive_scopes'])
        
        if drive_working:
            print(f"  üìÅ Drive API: ‚úÖ –†–ê–ë–û–¢–ê–ï–¢ ({len(drive_working)}/{drive_total} scopes)")
            for scope in drive_working:
                scope_short = scope.split('/')[-1]
                print(f"    ‚úÖ {scope_short}")
        else:
            print(f"  üìÅ Drive API: ‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢ (0/{drive_total} scopes)")
            for scope in results['drive_scopes'].keys():
                scope_short = scope.split('/')[-1]
                print(f"    ‚ùå {scope_short}")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    
    all_calendar_working = personal_results['calendar_api'] and work_results['calendar_api']
    any_drive_working = any(personal_results['drive_scopes'].values()) or any(work_results['drive_scopes'].values())
    
    if all_calendar_working and any_drive_working:
        print("  üéâ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ API —Ä–∞–±–æ—Ç–∞—é—Ç.")
        print("  üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    elif all_calendar_working:
        print("  ‚úÖ Calendar API —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –æ–±–æ–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤.")
        print("  üîß –ù—É–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å Google Drive API –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö:")
        if not any(personal_results['drive_scopes'].values()):
            print("    - –õ–∏—á–Ω—ã–π –ø—Ä–æ–µ–∫—Ç (testapp-68416)")
        if not any(work_results['drive_scopes'].values()):
            print("    - –†–∞–±–æ—á–∏–π –ø—Ä–æ–µ–∫—Ç (948812030960)")
        print("  üìã –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –±–∞–∑–æ–≤–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é (Calendar + Notion)")
    else:
        print("  ‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å API, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞.")
    
    # –°—Ç–∞—Ç—É—Å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    calendar_ready = 50 if all_calendar_working else 0
    drive_ready = 50 if any_drive_working else 0
    total_ready = calendar_ready + drive_ready
    
    print(f"\nüìà –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã: {total_ready}%")
    print(f"  üìÖ Calendar API: {calendar_ready}%")
    print(f"  üìÅ Drive API: {drive_ready}%")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –¢–ï–°–¢ –í–°–ï–• GOOGLE API")
    print("üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–∏—á–Ω—ã–π –∏ —Ä–∞–±–æ—á–∏–π –∞–∫–∫–∞—É–Ω—Ç—ã")
    print("üìÖ Calendar API + üìÅ Drive API")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    personal_oauth = os.getenv('PERSONAL_GOOGLE_OAUTH_CLIENT')
    personal_token = os.getenv('PERSONAL_GOOGLE_TOKEN')
    personal_calendar = os.getenv('PERSONAL_CALENDAR_ID')
    
    work_oauth = os.getenv('WORK_GOOGLE_OAUTH_CLIENT')
    work_token = os.getenv('WORK_GOOGLE_TOKEN')
    work_calendar = os.getenv('WORK_CALENDAR_ID')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    if not all([personal_oauth, personal_token, personal_calendar]):
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    if not all([work_oauth, work_token, work_calendar]):
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—á–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–∫–∫–∞—É–Ω—Ç—ã
    personal_results = test_account("–õ–∏—á–Ω—ã–π", personal_oauth, personal_token, personal_calendar)
    work_results = test_account("–†–∞–±–æ—á–∏–π", work_oauth, work_token, work_calendar)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    generate_report(personal_results, work_results)
    
    print(f"\n{'=' * 80}")
    print("üéä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"{'=' * 80}")

if __name__ == '__main__':
    main()
