#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∂–∞—Ç–∏—è –≤–∏–¥–µ–æ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ.
"""

import os
import sys
import time
import logging
from datetime import datetime
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
parent_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, parent_dir)

try:
    from src.config_manager import ConfigManager
    from src.media_processor import get_media_processor
    from src.drive_sync import get_drive_sync
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –º–æ–¥—É–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    sys.exit(1)

def test_video_compression():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∂–∞—Ç–∏—è –≤–∏–¥–µ–æ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ."""
    
    try:
        print("\nüîç –ü–æ–ª—É—á–∞–µ–º Google —Å–µ—Ä–≤–∏—Å—ã...")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        load_dotenv()
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        parent_id = os.getenv('PERSONAL_DRIVE_PARENT_ID')
        sync_root = os.getenv('MEDIA_SYNC_ROOT', 'data/synced')
        
        if not parent_id:
            print("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω PERSONAL_DRIVE_PARENT_ID")
            return
        
        print(f"‚úÖ Google Drive —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω")
        print(f"üìÅ PERSONAL_DRIVE_PARENT_ID: {parent_id}")
        print(f"üìÅ MEDIA_SYNC_ROOT: {sync_root}")
        
        print("\nüîß –°–æ–∑–¥–∞–µ–º –º–æ–¥—É–ª–∏ —Å –∫–æ–º–ø—Ä–µ—Å—Å–∏–µ–π –≤–∏–¥–µ–æ...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–ø—Ä–µ—Å—Å–∏–∏
        compression_configs = [
            ("H.264 Medium", True, "medium", "h264"),
            ("H.264 High", True, "high", "h264"),
            ("H.265 Medium", True, "medium", "h265"),
            ("VP9 Medium", True, "medium", "vp9"),
        ]
        
        for config_name, compression, quality, codec in compression_configs:
            print(f"\nüé¨ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: {config_name}")
            print(f"   –ö–æ–º–ø—Ä–µ—Å—Å–∏—è: {compression}, –ö–∞—á–µ—Å—Ç–≤–æ: {quality}, –ö–æ–¥–µ–∫: {codec}")
            
            # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
            os.environ['VIDEO_COMPRESSION'] = str(compression).lower()
            os.environ['VIDEO_QUALITY'] = quality
            os.environ['VIDEO_CODEC'] = codec
            os.environ['MEDIA_OUTPUT_FORMAT'] = 'mp3'
            
            # –°–æ–∑–¥–∞–µ–º ConfigManager —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
            config_manager = ConfigManager()
            
            # –°–æ–∑–¥–∞–µ–º –ª–æ–≥–≥–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∞
            logger = logging.getLogger("test_video_compression")
            
            # –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞-–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
            media_processor = get_media_processor(
                config_manager=config_manager,
                logger=logger
            )
            
            if not media_processor:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –º–æ–¥—É–ª—å")
                continue
            
            print("‚úÖ –ú–æ–¥—É–ª—å —Å–æ–∑–¥–∞–Ω")
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã
            print(f"\nüé¨ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã...")
            media_results = media_processor.process_media(quality)
            
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
            if isinstance(media_results, dict):
                for key, value in media_results.items():
                    if key == 'results':
                        for result in value:
                            print(f"  - –ê–∫–∫–∞—É–Ω—Ç: {result.get('account_type', 'unknown')}")
                            print(f"    - –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {result.get('processed', 0)}")
                            print(f"    - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: {result.get('synced', 0)}")
                    else:
                        print(f"  - {key}: {value}")
            else:
                print(f"  - {media_results}")
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö
            if isinstance(media_results, dict) and 'errors' in media_results and media_results['errors']:
                print(f"‚ùå –û—à–∏–±–∫–∏:")
                for error in media_results['errors']:
                    print(f"  - {error}")
    
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_video_compression()
