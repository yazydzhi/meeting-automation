#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –ø–∞–ø–æ–∫ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏.
–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã —Å—Ç–∞—Ç—É—Å–∞ –≤ –Ω–æ–≤—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è.
"""

import os
import sys
import json
import shutil
from pathlib import Path
from typing import Dict, List, Any

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.insert(0, str(Path(__file__).parent.parent))

try:
    from src.processing_status import ProcessingStatus
    from src.config_manager import ConfigManager
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
    sys.exit(1)


def find_old_status_files(root_path: str) -> List[Dict[str, Any]]:
    """–ù–∞–π—Ç–∏ –≤—Å–µ —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã —Å—Ç–∞—Ç—É—Å–∞ –≤ –ø—Ä–æ–µ–∫—Ç–µ."""
    old_files = []
    
    for root, dirs, files in os.walk(root_path):
        for file in files:
            if file == "üìä processing_status.json" or file == "üìä –°–¢–ê–¢–£–° –û–ë–†–ê–ë–û–¢–ö–ò.txt":
                old_files.append({
                    'path': os.path.join(root, file),
                    'old_name': file,
                    'new_name': 'processing_status.json' if file.endswith('.json') else 'processing_status.md',
                    'folder': root
                })
    
    return old_files


def rename_status_files(old_files: List[Dict[str, Any]]) -> List[Dict[str, Any]]:
    """–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã —Å—Ç–∞—Ç—É—Å–∞ –≤ –Ω–æ–≤—ã–µ."""
    renamed_files = []
    
    for file_info in old_files:
        old_path = file_info['path']
        new_name = file_info['new_name']
        new_path = os.path.join(file_info['folder'], new_name)
        
        try:
            # –ï—Å–ª–∏ –Ω–æ–≤—ã–π —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
            if os.path.exists(new_path):
                backup_path = f"{new_path}.backup"
                shutil.move(new_path, backup_path)
                print(f"üìã –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
            
            # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ñ–∞–π–ª
            shutil.move(old_path, new_path)
            print(f"‚úÖ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω: {file_info['old_name']} ‚Üí {new_name}")
            
            file_info['new_path'] = new_path
            renamed_files.append(file_info)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è {old_path}: {e}")
    
    return renamed_files


def update_processing_status(folder_path: str) -> bool:
    """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –ø–∞–ø–∫–∏."""
    try:
        status_manager = ProcessingStatus(folder_path)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        video_files = []
        audio_files = []
        transcript_files = []
        
        for file in os.listdir(folder_path):
            file_path = os.path.join(folder_path, file)
            if os.path.isfile(file_path):
                if file.lower().endswith(('.mp4', '.avi', '.mov', '.mkv', '.wmv')):
                    video_files.append(file)
                elif file.lower().endswith(('.mp3', '.wav', '.m4a', '.aac')):
                    audio_files.append(file)
                elif file.endswith('_transcript.txt'):
                    transcript_files.append(file)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
        for video_file in video_files:
            if not status_manager.is_file_processed(video_file, 'video_compression'):
                status_manager.add_file(video_file, 'video')
                print(f"üìπ –î–æ–±–∞–≤–ª–µ–Ω –≤–∏–¥–µ–æ —Ñ–∞–π–ª: {video_file}")
        
        for audio_file in audio_files:
            if not status_manager.is_file_processed(audio_file, 'audio_extraction'):
                status_manager.add_file(audio_file, 'audio')
                print(f"üéµ –î–æ–±–∞–≤–ª–µ–Ω –∞—É–¥–∏–æ —Ñ–∞–π–ª: {audio_file}")
        
        for transcript_file in transcript_files:
            if not status_manager.is_file_processed(transcript_file, 'transcription'):
                status_manager.add_file(transcript_file, 'transcript')
                print(f"üìù –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è: {transcript_file}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å –ø–∞–ø–∫–∏
        status_manager.get_summary()
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –ø–∞–ø–∫–∏: {folder_path}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {folder_path}: {e}")
        return False


def process_all_folders(config_manager: ConfigManager) -> Dict[str, Any]:
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—Å–µ –ø–∞–ø–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤."""
    results = {
        'personal': {'status': 'skipped', 'folders': 0, 'errors': 0},
        'work': {'status': 'skipped', 'folders': 0, 'errors': 0},
        'total_folders': 0,
        'total_errors': 0
    }
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ª–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
    if config_manager.is_personal_enabled():
        personal_config = config_manager.get_personal_config()
        personal_folder = personal_config.get('local_drive_root')
        
        if personal_folder and os.path.exists(personal_folder):
            print(f"üë§ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –ª–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç: {personal_folder}")
            results['personal']['status'] = 'processing'
            
            try:
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥–ø–∞–ø–∫–∏ —Å–æ–±—ã—Ç–∏–π
                for event_folder in os.listdir(personal_folder):
                    event_path = os.path.join(personal_folder, event_folder)
                    if os.path.isdir(event_path):
                        results['personal']['folders'] += 1
                        results['total_folders'] += 1
                        
                        if update_processing_status(event_path):
                            print(f"  ‚úÖ {event_folder}")
                        else:
                            results['personal']['errors'] += 1
                            results['total_errors'] += 1
                            print(f"  ‚ùå {event_folder}")
                
                results['personal']['status'] = 'completed'
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–∏—á–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞: {e}")
                results['personal']['status'] = 'error'
                results['personal']['errors'] += 1
                results['total_errors'] += 1
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–±–æ—á–∏–π –∞–∫–∫–∞—É–Ω—Ç
    if config_manager.is_work_enabled():
        work_config = config_manager.get_work_config()
        work_folder = work_config.get('local_drive_root')
        
        if work_folder and os.path.exists(work_folder):
            print(f"üè¢ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ä–∞–±–æ—á–∏–π –∞–∫–∫–∞—É–Ω—Ç: {work_folder}")
            results['work']['status'] = 'processing'
            
            try:
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥–ø–∞–ø–∫–∏ —Å–æ–±—ã—Ç–∏–π
                for event_folder in os.listdir(work_folder):
                    event_path = os.path.join(work_folder, event_folder)
                    if os.path.isdir(event_path):
                        results['work']['folders'] += 1
                        results['total_folders'] += 1
                        
                        if update_processing_status(event_path):
                            print(f"  ‚úÖ {event_folder}")
                        else:
                            results['work']['errors'] += 1
                            results['total_errors'] += 1
                            print(f"  ‚ùå {event_folder}")
                
                results['work']['status'] = 'completed'
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–±–æ—á–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞: {e}")
                results['work']['status'] = 'error'
                results['work']['errors'] += 1
                results['total_errors'] += 1
    
    return results


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üîç –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–ø–æ–∫ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        config_manager = ConfigManager()
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if not config_manager.validate_config():
        print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        sys.exit(1)
    
    print("\nüìÅ –ü–æ–∏—Å–∫ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å—Ç–∞—Ç—É—Å–∞...")
    
    # –ò—â–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã —Å—Ç–∞—Ç—É—Å–∞
    old_files = find_old_status_files('.')
    
    if old_files:
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(old_files)} —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å—Ç–∞—Ç—É—Å–∞:")
        for file_info in old_files:
            print(f"  - {file_info['path']}")
        
        print("\nüîÑ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")
        renamed_files = rename_status_files(old_files)
        print(f"‚úÖ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ {len(renamed_files)} —Ñ–∞–π–ª–æ–≤")
    else:
        print("‚úÖ –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã —Å—Ç–∞—Ç—É—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    print("\nüìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ø–∞–ø–æ–∫...")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –ø–∞–ø–∫–∏
    results = process_all_folders(config_manager)
    
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
    print(f"  üë§ –õ–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç: {results['personal']['status']} ({results['personal']['folders']} –ø–∞–ø–æ–∫, {results['personal']['errors']} –æ—à–∏–±–æ–∫)")
    print(f"  üè¢ –†–∞–±–æ—á–∏–π –∞–∫–∫–∞—É–Ω—Ç: {results['work']['status']} ({results['work']['folders']} –ø–∞–ø–æ–∫, {results['work']['errors']} –æ—à–∏–±–æ–∫)")
    print(f"  üìÅ –í—Å–µ–≥–æ –ø–∞–ø–æ–∫: {results['total_folders']}")
    print(f"  ‚ùå –í—Å–µ–≥–æ –æ—à–∏–±–æ–∫: {results['total_errors']}")
    
    if results['total_errors'] == 0:
        print("\nüéâ –í—Å–µ –ø–∞–ø–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print(f"\n‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏: {results['total_errors']} –ø–∞–ø–æ–∫")


if __name__ == "__main__":
    main()
