#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤—Å—Ç—Ä–µ—á–∏ –∏–∑ –æ–ø–∏—Å–∞–Ω–∏–π —Å–æ–±—ã—Ç–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—è.
"""

import os
import sys
import sqlite3
import re
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from src.config_manager import ConfigManager
from src.handlers.calendar_handler import CalendarHandler
import logging

def extract_meeting_links():
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å—Ç—Ä–µ—á–∏ –∏–∑ –æ–ø–∏—Å–∞–Ω–∏–π —Å–æ–±—ã—Ç–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—è."""
    
    try:
        print("üîó –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤—Å—Ç—Ä–µ—á–∏ –∏–∑ –æ–ø–∏—Å–∞–Ω–∏–π —Å–æ–±—ã—Ç–∏–π...")
        print("=" * 70)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        config_manager = ConfigManager()
        logger = logging.getLogger(__name__)
        calendar_handler = CalendarHandler(config_manager, logger)
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SQLite –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        db_path = "data/system_state.db"
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ processed_events
        cursor.execute("""
            SELECT event_id, event_title, event_start_time, event_end_time, 
                   attendees, meeting_link, calendar_type, account_type
            FROM processed_events
            WHERE meeting_link IS NULL OR meeting_link = ''
            ORDER BY event_start_time DESC
        """)
        
        events_to_update = cursor.fetchall()
        print(f"üìä –°–æ–±—ã—Ç–∏–π –±–µ–∑ —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤—Å—Ç—Ä–µ—á–∏: {len(events_to_update)}")
        
        if not events_to_update:
            print("‚úÖ –í—Å–µ —Å–æ–±—ã—Ç–∏—è —É–∂–µ –∏–º–µ—é—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å—Ç—Ä–µ—á–∏!")
            return True
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Å–æ–±—ã—Ç–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏–π
        calendar_events = {}
        
        for account_type in ['personal', 'work']:
            print(f"\nüìÖ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π {account_type} –∫–∞–ª–µ–Ω–¥–∞—Ä—è...")
            events = calendar_handler.get_calendar_events(account_type)
            
            for event in events:
                event_id = event.get('id')
                if event_id:
                    calendar_events[event_id] = event
        
        print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {len(calendar_events)}")
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å—Ç—Ä–µ—á–∏
        updated_count = 0
        
        for event_data in events_to_update:
            event_id, event_title, event_start_time, event_end_time, attendees, meeting_link, calendar_type, account_type = event_data
            
            # –ò—â–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
            if event_id in calendar_events:
                calendar_event = calendar_events[event_id]
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –≤—Å—Ç—Ä–µ—á—É –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è
                description = calendar_event.get('description', '')
                location = calendar_event.get('location', '')
                
                meeting_link = extract_meeting_link_from_text(description, location)
                
                if meeting_link:
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                    cursor.execute('''
                        UPDATE processed_events 
                        SET meeting_link = ?
                        WHERE event_id = ? AND account_type = ?
                    ''', (meeting_link, event_id, account_type))
                    
                    updated_count += 1
                    print(f"  ‚úÖ {event_id}: {meeting_link}")
                else:
                    print(f"  ‚ùå {event_id}: —Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            else:
                print(f"  ‚ö†Ô∏è {event_id}: —Å–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ")
        
        conn.commit()
        
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑–≤–ª–µ—á–µ–Ω–∏—è:")
        print(f"  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {updated_count}")
        print(f"  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫: {len(events_to_update) - updated_count}")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤—Å—Ç—Ä–µ—á–∏: {e}")
        return False

def extract_meeting_link_from_text(description: str, location: str = "") -> str:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –≤—Å—Ç—Ä–µ—á—É –∏–∑ —Ç–µ–∫—Å—Ç–∞ –æ–ø–∏—Å–∞–Ω–∏—è –∏–ª–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è.
    
    Args:
        description: –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        location: –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        
    Returns:
        –°—Å—ã–ª–∫–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    """
    if not description and not location:
        return ""
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
    text = f"{description} {location}".strip()
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤—Å—Ç—Ä–µ—á–∏
    patterns = [
        # Google Meet
        r'https://meet\.google\.com/[a-zA-Z0-9\-]+',
        r'meet\.google\.com/[a-zA-Z0-9\-]+',
        
        # Zoom
        r'https://[a-zA-Z0-9\-]+\.zoom\.us/j/[0-9]+',
        r'zoom\.us/j/[0-9]+',
        
        # Microsoft Teams
        r'https://teams\.microsoft\.com/l/meetup-join/[a-zA-Z0-9\-%]+',
        r'teams\.microsoft\.com/l/meetup-join/[a-zA-Z0-9\-%]+',
        
        # –û–±—â–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è —Å—Å—ã–ª–æ–∫
        r'https://[a-zA-Z0-9\-\.]+/[a-zA-Z0-9\-/]+',
    ]
    
    for pattern in patterns:
        matches = re.findall(pattern, text, re.IGNORECASE)
        if matches:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É
            link = matches[0]
            
            # –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å https://, –¥–æ–±–∞–≤–ª—è–µ–º
            if not link.startswith('http'):
                link = f"https://{link}"
            
            return link
    
    return ""

if __name__ == "__main__":
    success = extract_meeting_links()
    
    if success:
        print("\n‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤—Å—Ç—Ä–µ—á–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)
