#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ SQLite –±–∞–∑–µ.
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent.parent))

from tools.db_viewer import DatabaseViewer


class InteractiveDBViewer:
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π viewer –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    
    def __init__(self, db_path: str = "data/system_state.db"):
        self.viewer = DatabaseViewer(db_path)
        self.running = True
    
    def start(self):
        """–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞."""
        if not self.viewer.connect():
            return
        
        print("üîç –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π DB Viewer")
        print("=" * 50)
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("  1 - stats     - –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        print("  2 - state     - –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã")
        print("  3 - events    - –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è")
        print("  4 - media     - –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã")
        print("  5 - trans     - –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏")
        print("  6 - notion    - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Notion")
        print("  7 - table     - –¢–∞–±–ª–∏—Ü–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π")
        print("  8 - detail    - –î–µ—Ç–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏")
        print("  9 - raw       - –°—ã—Ä–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ü–∏–∫–ª–∞")
        print("  0 - search    - –ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏–π")
        print("  h - help      - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É")
        print("  q - quit/exit - –í—ã—Ö–æ–¥")
        print("=" * 50)
        print("üí° –ü–æ—Å–ª–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é")
        
        while self.running:
            try:
                command = input("\nüîç > ").strip()
                
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∏—Å–ª–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
                if command == '1':
                    self.viewer.show_statistics()
                    self._wait_for_return()
                elif command == '2':
                    self.viewer.show_system_state(10)
                    self._wait_for_return()
                elif command == '3':
                    self.viewer.show_processed_events(20)
                    self._wait_for_return()
                elif command == '4':
                    self.viewer.show_processed_media(20)
                    self._wait_for_return()
                elif command == '5':
                    self.viewer.show_processed_transcriptions(20)
                    self._wait_for_return()
                elif command == '6':
                    self.viewer.show_notion_sync(20)
                    self._wait_for_return()
                elif command == '7':
                    self.viewer.show_processing_table(20)
                    self._wait_for_return()
                elif command == '8':
                    self.viewer.show_detailed_processing_table(10)
                    self._wait_for_return()
                elif command == '9':
                    self._handle_raw_command()
                elif command == '0':
                    self._handle_search_command()
                
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –±—É–∫–≤–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
                elif command.lower() in ['quit', 'exit', 'q']:
                    self.running = False
                elif command.lower() in ['help', 'h']:
                    self.show_help()
                    self._wait_for_return()
                
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                elif command.lower() == 'stats':
                    self.viewer.show_statistics()
                    self._wait_for_return()
                elif command.lower() == 'state':
                    self.viewer.show_system_state(10)
                    self._wait_for_return()
                elif command.lower() == 'events':
                    self.viewer.show_processed_events(20)
                    self._wait_for_return()
                elif command.lower() == 'media':
                    self.viewer.show_processed_media(20)
                    self._wait_for_return()
                elif command.lower() == 'trans':
                    self.viewer.show_processed_transcriptions(20)
                    self._wait_for_return()
                elif command.lower() == 'notion':
                    self.viewer.show_notion_sync(20)
                    self._wait_for_return()
                elif command.lower() == 'table':
                    self.viewer.show_processing_table(20)
                    self._wait_for_return()
                elif command.lower() == 'detail':
                    self.viewer.show_detailed_processing_table(10)
                    self._wait_for_return()
                elif command.startswith('search '):
                    query = command[7:].strip()
                    if query:
                        self.viewer.search_events(query, 10)
                        self._wait_for_return()
                    else:
                        print("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
                elif command.startswith('raw '):
                    try:
                        cycle_id = int(command[4:].strip())
                        self.viewer.show_raw_state(cycle_id)
                        self._wait_for_return()
                    except ValueError:
                        print("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —Ü–∏–∫–ª–∞")
                elif command == '':
                    continue
                else:
                    print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
                    print("–í–≤–µ–¥–∏—Ç–µ 'h' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ –∏–ª–∏ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 9")
            
            except KeyboardInterrupt:
                print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                self.running = False
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        self.viewer.disconnect()
    
    def _wait_for_return(self):
        """–û–∂–∏–¥–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é."""
        try:
            input("\n‚èé –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
        except KeyboardInterrupt:
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            self.running = False
    
    def _handle_search_command(self):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –ø–æ–∏—Å–∫–∞."""
        try:
            query = input("üîç –í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: ").strip()
            if query:
                self.viewer.search_events(query, 10)
                self._wait_for_return()
            else:
                print("‚ùå –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        except KeyboardInterrupt:
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            self.running = False
    
    def _handle_raw_command(self):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—ã—Ä–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è."""
        try:
            cycle_id = input("üîç –í–≤–µ–¥–∏—Ç–µ ID —Ü–∏–∫–ª–∞: ").strip()
            if cycle_id.isdigit():
                self.viewer.show_raw_state(int(cycle_id))
                self._wait_for_return()
            else:
                print("‚ùå ID —Ü–∏–∫–ª–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        except KeyboardInterrupt:
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            self.running = False
    
    def show_help(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É."""
        print("\nüìñ –°–ü–†–ê–í–ö–ê")
        print("=" * 50)
        print("–ß–∏—Å–ª–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("  1 - stats     - –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        print("  2 - state     - –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã")
        print("  3 - events    - –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è")
        print("  4 - media     - –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã")
        print("  5 - trans     - –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏")
        print("  6 - notion    - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Notion")
        print("  7 - table     - –¢–∞–±–ª–∏—Ü–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π")
        print("  8 - detail    - –î–µ—Ç–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏")
        print("  9 - raw       - –°—ã—Ä–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ü–∏–∫–ª–∞")
        print("  0 - search    - –ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏–π")
        print("\n–ë—É–∫–≤–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("  h - help      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É")
        print("  q - quit/exit - –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
        print("\nüí° –ü–æ—Å–ª–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    import argparse
    
    parser = argparse.ArgumentParser(description='–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π viewer –¥–ª—è SQLite –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö')
    parser.add_argument('--db', default='data/system_state.db', help='–ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
    
    args = parser.parse_args()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if not Path(args.db).exists():
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {args.db}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –±—ã–ª –∑–∞–ø—É—â–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–∞–∑")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    viewer = InteractiveDBViewer(args.db)
    viewer.start()


if __name__ == '__main__':
    main()
