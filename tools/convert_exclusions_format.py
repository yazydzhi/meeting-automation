#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ –≤ –Ω–æ–≤—ã–π.
"""

import os
import sys
from dotenv import load_dotenv

def convert_exclusions_format():
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –≤ –Ω–æ–≤—ã–π."""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    print("üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π...")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
    old_exclusions = os.getenv('EVENT_EXCLUSIONS', '')
    if not old_exclusions:
        print("‚ùå EVENT_EXCLUSIONS –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return False
    
    print(f"üìù –¢–µ–∫—É—â–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç):")
    print(f"   {old_exclusions}")
    print()
    
    # –ü–∞—Ä—Å–∏–º —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –Ω–æ–≤—ã–π
    new_exclusions = []
    
    for exclusion_str in old_exclusions.split(','):
        exclusion_str = exclusion_str.strip()
        if not exclusion_str:
            continue
        
        # –ü–∞—Ä—Å–∏–º —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç: account_type:exclusion_type:value
        parts = exclusion_str.split(':', 2)
        if len(parts) == 3:
            account_type, exclusion_type, value = parts
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç
            if exclusion_type == 'regex':
                new_exclusions.append(f"regex:{value}")
            else:
                new_exclusions.append(value)
        else:
            print(f"‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è: {exclusion_str}")
    
    # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    new_exclusions = list(set(new_exclusions))
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
    new_exclusions_str = ','.join(new_exclusions)
    
    print(f"üìù –ù–æ–≤—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç):")
    print(f"   {new_exclusions_str}")
    print()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª
    try:
        # –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env —Ñ–∞–π–ª
        with open('.env', 'r', encoding='utf-8') as f:
            lines = f.readlines()
        
        # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç—Ä–æ–∫—É —Å EVENT_EXCLUSIONS
        updated_lines = []
        for line in lines:
            if line.strip().startswith('EVENT_EXCLUSIONS='):
                updated_lines.append(f"EVENT_EXCLUSIONS={new_exclusions_str}\n")
            else:
                updated_lines.append(line)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open('.env', 'w', encoding='utf-8') as f:
            f.writelines(updated_lines)
        
        print("‚úÖ .env —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω")
        print(f"üìä –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {len(new_exclusions)} –∏—Å–∫–ª—é—á–µ–Ω–∏–π")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env —Ñ–∞–π–ª–∞: {e}")
        return False

if __name__ == "__main__":
    success = convert_exclusions_format()
    
    if success:
        print("\nüéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)
