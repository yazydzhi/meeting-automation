#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è event_id –≤ —Ç–∞–±–ª–∏—Ü–µ folder_creation_status.
–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ö–µ—à-based ID –Ω–∞ –Ω–æ–≤—ã–µ ical-based ID.
"""

import os
import sys
import sqlite3
import hashlib
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from src.config_manager import ConfigManager
from src.handlers.state_manager import StateManager

def extract_ical_id_from_hash(hash_id: str) -> str:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç ical ID –∏–∑ —Ö–µ—à–∞, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ.
    """
    # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π ical ID –≤ processed_events
    conn = sqlite3.connect('data/system_state.db')
    cursor = conn.cursor()
    
    # –ò—â–µ–º –ø–æ —á–∞—Å—Ç–∏ —Ö–µ—à–∞
    hash_prefix = hash_id[:8]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 8 —Å–∏–º–≤–æ–ª–æ–≤
    cursor.execute('''
        SELECT event_id FROM processed_events 
        WHERE event_id LIKE ? 
        LIMIT 1
    ''', (f'%{hash_prefix}%',))
    
    result = cursor.fetchone()
    conn.close()
    
    return result[0] if result else None

def fix_folder_creation_status():
    """
    –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ event_id –≤ —Ç–∞–±–ª–∏—Ü–µ folder_creation_status.
    """
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è event_id –≤ folder_creation_status...")
    
    conn = sqlite3.connect('data/system_state.db')
    cursor = conn.cursor()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ folder_creation_status
    cursor.execute('SELECT event_id, folder_path, account_type, status, created_at FROM folder_creation_status')
    folder_records = cursor.fetchall()
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(folder_records)} –∑–∞–ø–∏—Å–µ–π –≤ folder_creation_status")
    
    updated_count = 0
    deleted_count = 0
    
    for record in folder_records:
        old_event_id, folder_path, account_type, status, created_at = record
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Å—Ç–∞—Ä—ã–º —Ö–µ—à-based ID
        if not old_event_id.startswith('ical_'):
            print(f"üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å—Ç–∞—Ä—ã–π ID: {old_event_id}")
            
            # –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π ical ID
            new_event_id = extract_ical_id_from_hash(old_event_id)
            
            if new_event_id:
                print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω –Ω–æ–≤—ã–π ID: {new_event_id}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å—å —Å –Ω–æ–≤—ã–º ID
                cursor.execute('''
                    SELECT COUNT(*) FROM folder_creation_status 
                    WHERE event_id = ? AND account_type = ?
                ''', (new_event_id, account_type))
                
                if cursor.fetchone()[0] == 0:
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
                    cursor.execute('''
                        UPDATE folder_creation_status 
                        SET event_id = ? 
                        WHERE event_id = ? AND account_type = ?
                    ''', (new_event_id, old_event_id, account_type))
                    
                    updated_count += 1
                    print(f"  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {old_event_id} -> {new_event_id}")
                else:
                    # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç
                    cursor.execute('''
                        DELETE FROM folder_creation_status 
                        WHERE event_id = ? AND account_type = ?
                    ''', (old_event_id, account_type))
                    
                    deleted_count += 1
                    print(f"  üóëÔ∏è –£–¥–∞–ª–µ–Ω –¥—É–±–ª–∏–∫–∞—Ç: {old_event_id}")
            else:
                print(f"  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π ical ID –¥–ª—è: {old_event_id}")
    
    conn.commit()
    conn.close()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
    print(f"  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {updated_count}")
    print(f"  üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: {deleted_count}")
    print(f"  üìÅ –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ folder_creation_status: {len(folder_records)}")

def verify_fix():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
    """
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
    
    conn = sqlite3.connect('data/system_state.db')
    cursor = conn.cursor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–æ–ª—å–∫–æ —Å–æ–±—ã—Ç–∏–π –∏–º–µ—é—Ç –ø–∞–ø–∫–∏
    cursor.execute('''
        SELECT COUNT(DISTINCT pe.event_id) 
        FROM processed_events pe
        INNER JOIN folder_creation_status fcs ON pe.event_id = fcs.event_id 
        WHERE fcs.status = 'success'
    ''')
    
    events_with_folders = cursor.fetchone()[0]
    
    # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—ã—Ç–∏–π
    cursor.execute('SELECT COUNT(*) FROM processed_events')
    total_events = cursor.fetchone()[0]
    
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ folder_creation_status
    cursor.execute('SELECT COUNT(*) FROM folder_creation_status')
    total_folders = cursor.fetchone()[0]
    
    conn.close()
    
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
    print(f"  üìÖ –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {total_events}")
    print(f"  üìÅ –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –æ –ø–∞–ø–∫–∞—Ö: {total_folders}")
    print(f"  ‚úÖ –°–æ–±—ã—Ç–∏–π —Å –ø–∞–ø–∫–∞–º–∏: {events_with_folders}")
    print(f"  üìà –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–∫—Ä—ã—Ç–∏—è: {(events_with_folders/total_events*100):.1f}%")

if __name__ == "__main__":
    try:
        fix_folder_creation_status()
        verify_fix()
        print("\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏: {e}")
        sys.exit(1)
