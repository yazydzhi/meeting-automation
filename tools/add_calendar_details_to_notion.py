#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Notion.
–î–æ–±–∞–≤–ª—è–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è, —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å—Ç—Ä–µ—á–∏ –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è.
"""

import os
import sys
import sqlite3
import requests
import json
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def add_calendar_details_to_notion():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –¥–µ—Ç–∞–ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Notion."""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    print("üìÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Notion...")
    print("=" * 80)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    notion_token = os.getenv('NOTION_TOKEN')
    notion_database_id = os.getenv('NOTION_DATABASE_ID')
    
    if not notion_token or not notion_database_id:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è NOTION_TOKEN –∏–ª–∏ NOTION_DATABASE_ID")
        return False
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_path = "data/system_state.db"
    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return False
    
    try:
        with sqlite3.connect(db_path) as conn:
            cursor = conn.cursor()
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è —Å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            cursor.execute('''
                SELECT 
                    pe.event_id,
                    pe.event_title,
                    pe.event_start_time,
                    pe.event_end_time,
                    pe.attendees,
                    pe.meeting_link,
                    pe.calendar_type,
                    pe.account_type,
                    nss.page_id,
                    nss.page_url
                FROM processed_events pe
                LEFT JOIN notion_sync_status nss ON pe.event_id = nss.event_id
                WHERE nss.page_id IS NOT NULL
                AND (
                    pe.attendees IS NULL OR pe.attendees = '' OR pe.attendees = 'None'
                    OR pe.meeting_link IS NULL OR pe.meeting_link = '' OR pe.meeting_link = 'None'
                )
                ORDER BY pe.event_start_time DESC
                LIMIT 10
            ''')
            
            events = cursor.fetchall()
            
            if not events:
                print("‚úÖ –í—Å–µ —Å–æ–±—ã—Ç–∏—è —É–∂–µ –∏–º–µ—é—Ç –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
                return True
            
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(events)} —Å–æ–±—ã—Ç–∏–π —Å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
            print()
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è Notion API
            headers = {
                "Authorization": f"Bearer {notion_token}",
                "Notion-Version": "2022-06-28",
                "Content-Type": "application/json"
            }
            
            enhanced_count = 0
            
            for i, event in enumerate(events, 1):
                event_id, event_title, start_time, end_time, attendees, meeting_link, calendar_type, account_type, page_id, page_url = event
                
                print(f"üìÖ {i}. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {event_title}")
                print(f"   üÜî Event ID: {event_id}")
                print(f"   üìÑ Page ID: {page_id}")
                
                try:
                    # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
                    calendar_data = _get_calendar_event_data(event_id, account_type, calendar_type)
                    
                    if not calendar_data:
                        print(f"   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è")
                        continue
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    properties_to_update = {}
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –µ—Å–ª–∏ –µ—Å—Ç—å
                    if calendar_data.get('attendees') and not attendees:
                        attendees_list = calendar_data['attendees']
                        if isinstance(attendees_list, list) and attendees_list:
                            attendees_text = ", ".join(attendees_list[:10])  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                            properties_to_update["Attendees"] = {
                                "rich_text": [
                                    {
                                        "type": "text",
                                        "text": {
                                            "content": attendees_text
                                        }
                                    }
                                ]
                            }
                            print(f"   üë• –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(attendees_list)} —á–µ–ª–æ–≤–µ–∫")
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –≤—Å—Ç—Ä–µ—á—É, –µ—Å–ª–∏ –µ—Å—Ç—å
                    if calendar_data.get('meeting_link') and not meeting_link:
                        properties_to_update["Meeting Link"] = {
                            "url": calendar_data['meeting_link']
                        }
                        print(f"   üîó –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –≤—Å—Ç—Ä–µ—á—É: {calendar_data['meeting_link'][:50]}...")
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    if properties_to_update:
                        update_url = f"https://api.notion.com/v1/pages/{page_id}"
                        update_data = {"properties": properties_to_update}
                        
                        response = requests.patch(update_url, headers=headers, json=update_data)
                        response.raise_for_status()
                        print(f"   ‚úÖ –°–≤–æ–π—Å—Ç–≤–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
                        
                        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                        _update_event_data_in_db(event_id, calendar_data)
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å
                    if calendar_data.get('description'):
                        _add_event_description_to_page(page_id, calendar_data, headers)
                        print(f"   ‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–æ")
                    
                    enhanced_count += 1
                    print(f"   üéâ –î–µ—Ç–∞–ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
                    
                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π: {e}")
                
                print()
                
                # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
                if i >= 5:
                    print(f"... –∏ –µ—â–µ {len(events) - 5} —Å–æ–±—ã—Ç–∏–π")
                    break
            
            print(f"‚úÖ –£–ª—É—á—à–µ–Ω–æ {enhanced_count} –∏–∑ {min(len(events), 5)} —Å—Ç—Ä–∞–Ω–∏—Ü")
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def _get_calendar_event_data(event_id: str, account_type: str, calendar_type: str) -> dict:
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è."""
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        from src.config_manager import ConfigManager
        from src.handlers.calendar_handler import CalendarHandler
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config_manager = ConfigManager()
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        calendar_handler = CalendarHandler(config_manager)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        events = calendar_handler.get_calendar_events(account_type)
        
        # –ò—â–µ–º –Ω—É–∂–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
        for event in events:
            if event.get('id') == event_id:
                return event
        
        return {}
        
    except Exception as e:
        print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {e}")
        return {}

def _update_event_data_in_db(event_id: str, calendar_data: dict):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    
    try:
        db_path = "data/system_state.db"
        with sqlite3.connect(db_path) as conn:
            cursor = conn.cursor()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
            cursor.execute('''
                UPDATE processed_events 
                SET attendees = ?, meeting_link = ?
                WHERE event_id = ?
            ''', (
                json.dumps(calendar_data.get('attendees', [])),
                calendar_data.get('meeting_link', ''),
                event_id
            ))
            
            conn.commit()
            
    except Exception as e:
        print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î: {e}")

def _add_event_description_to_page(page_id: str, calendar_data: dict, headers: dict):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—É Notion."""
    
    try:
        description = calendar_data.get('description', '')
        if not description:
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –ª–∏ —É–∂–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        blocks_url = f"https://api.notion.com/v1/blocks/{page_id}/children"
        blocks_response = requests.get(blocks_url, headers=headers)
        blocks_response.raise_for_status()
        blocks_data = blocks_response.json()
        
        blocks = blocks_data.get('results', [])
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        has_description = False
        for block in blocks:
            if block.get('type') == 'heading_2':
                heading_text = block.get('heading_2', {}).get('rich_text', [])
                if heading_text:
                    text_content = heading_text[0].get('text', {}).get('content', '')
                    if '–û–ø–∏—Å–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏' in text_content:
                        has_description = True
                        break
        
        if has_description:
            return
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
        description_blocks = [
            {
                "type": "heading_2",
                "heading_2": {
                    "rich_text": [
                        {
                            "type": "text",
                            "text": {
                                "content": "üìã –û–ø–∏—Å–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏"
                            }
                        }
                    ]
                }
            },
            {
                "type": "paragraph",
                "paragraph": {
                    "rich_text": [
                        {
                            "type": "text",
                            "text": {
                                "content": description
                            }
                        }
                    ]
                }
            }
        ]
        
        blocks_data = {"children": description_blocks}
        response = requests.patch(blocks_url, headers=headers, json=blocks_data)
        response.raise_for_status()
        
    except Exception as e:
        print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è: {e}")

if __name__ == "__main__":
    success = add_calendar_details_to_notion()
    
    if success:
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)
