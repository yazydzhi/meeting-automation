#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è —Å–∞–º–º–∞—Ä–∏ —Å —Å–æ–±—ã—Ç–∏—è–º–∏.
"""

import os
import sys
import sqlite3
import re
from datetime import datetime

def link_summaries_to_events():
    """–°–≤—è–∑—ã–≤–∞–µ—Ç —Å–∞–º–º–∞—Ä–∏ —Å —Å–æ–±—ã—Ç–∏—è–º–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–∞–π–ª–æ–≤ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–π."""
    
    try:
        print("üîó –°–≤—è–∑—ã–≤–∞–Ω–∏–µ —Å–∞–º–º–∞—Ä–∏ —Å —Å–æ–±—ã—Ç–∏—è–º–∏...")
        print("=" * 50)
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SQLite –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        db_path = "data/system_state.db"
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–∞–º–º–∞—Ä–∏ –±–µ–∑ event_id
        cursor.execute("""
            SELECT id, transcript_file, summary_file, analysis_file, status
            FROM processed_summaries
            WHERE event_id IS NULL
            ORDER BY created_at DESC
        """)
        
        summaries = cursor.fetchall()
        print(f"üìä –°–∞–º–º–∞—Ä–∏ –±–µ–∑ event_id: {len(summaries)}")
        
        if not summaries:
            print("‚úÖ –í—Å–µ —Å–∞–º–º–∞—Ä–∏ —É–∂–µ —Å–≤—è–∑–∞–Ω—ã —Å —Å–æ–±—ã—Ç–∏—è–º–∏!")
            return True
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ —Å event_id
        cursor.execute("""
            SELECT id, file_path, transcript_file, event_id
            FROM processed_transcriptions
            WHERE event_id IS NOT NULL
            ORDER BY processed_at DESC
        """)
        
        transcriptions = cursor.fetchall()
        print(f"üìä –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–π —Å event_id: {len(transcriptions)}")
        
        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–π –¥–ª—è –ø–æ–∏—Å–∫–∞
        transcriptions_dict = {}
        for transcription in transcriptions:
            transcription_id, file_path, transcript_file, event_id = transcription
            if transcript_file:
                transcriptions_dict[transcript_file] = event_id
        
        # –°–≤—è–∑—ã–≤–∞–µ–º —Å–∞–º–º–∞—Ä–∏ —Å —Å–æ–±—ã—Ç–∏—è–º–∏
        linked_count = 0
        
        for summary in summaries:
            summary_id, transcript_file, summary_file, analysis_file, status = summary
            
            # –ò—â–µ–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é –≤ —Å–ª–æ–≤–∞—Ä–µ
            if transcript_file in transcriptions_dict:
                event_id = transcriptions_dict[transcript_file]
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∞–º–º–∞—Ä–∏
                cursor.execute('''
                    UPDATE processed_summaries 
                    SET event_id = ?
                    WHERE id = ?
                ''', (event_id, summary_id))
                
                linked_count += 1
                print(f"  ‚úÖ {transcript_file} -> {event_id}")
            else:
                print(f"  ‚ùå {transcript_file} -> —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        conn.commit()
        
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–≤—è–∑—ã–≤–∞–Ω–∏—è:")
        print(f"  ‚úÖ –°–≤—è–∑–∞–Ω–æ —Å–∞–º–º–∞—Ä–∏: {linked_count}")
        print(f"  ‚ùå –ù–µ —Å–≤—è–∑–∞–Ω–æ: {len(summaries) - linked_count}")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏–∏ —Å–∞–º–º–∞—Ä–∏: {e}")
        return False

if __name__ == "__main__":
    success = link_summaries_to_events()
    
    if success:
        print("\n‚úÖ –°–≤—è–∑—ã–≤–∞–Ω–∏–µ —Å–∞–º–º–∞—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –°–≤—è–∑—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)
