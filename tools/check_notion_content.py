#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö Notion.
"""

import os
import sys
import requests
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def check_notion_content():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö Notion."""
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    notion_token = os.getenv('NOTION_TOKEN')
    database_id = os.getenv('NOTION_DATABASE_ID')
    
    if not notion_token or not database_id:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è NOTION_TOKEN –∏–ª–∏ NOTION_DATABASE_ID")
        return False
    
    try:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è API
        headers = {
            "Authorization": f"Bearer {notion_token}",
            "Content-Type": "application/json",
            "Notion-Version": "2022-06-28"
        }
        
        print("üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö Notion...")
        print("=" * 60)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ Notion
        all_pages = []
        has_more = True
        start_cursor = None
        
        while has_more:
            url = f"https://api.notion.com/v1/databases/{database_id}/query"
            payload = {
                "page_size": 100
            }
            if start_cursor:
                payload["start_cursor"] = start_cursor
            
            response = requests.post(url, headers=headers, json=payload)
            response.raise_for_status()
            
            data = response.json()
            all_pages.extend(data['results'])
            has_more = data['has_more']
            start_cursor = data.get('next_cursor')
        
        print(f"üìä –°—Ç—Ä–∞–Ω–∏—Ü –≤ Notion: {len(all_pages)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        pages_with_content = 0
        pages_with_transcription = 0
        pages_with_summary = 0
        
        for page in all_pages:
            page_id = page['id']
            
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            title = ""
            if 'properties' in page and 'Name' in page['properties']:
                title_prop = page['properties']['Name']
                if title_prop['type'] == 'title' and title_prop['title']:
                    title = title_prop['title'][0]['text']['content']
            
            # –ü–æ–ª—É—á–∞–µ–º –±–ª–æ–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            try:
                url = f"https://api.notion.com/v1/blocks/{page_id}/children"
                response = requests.get(url, headers=headers)
                response.raise_for_status()
                
                data = response.json()
                blocks = data.get('results', [])
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                has_transcription = False
                has_summary = False
                
                for block in blocks:
                    if block['type'] == 'heading_2':
                        heading = block['heading_2']['rich_text']
                        if heading:
                            text = heading[0]['text']['content']
                            if '–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è' in text:
                                has_transcription = True
                            elif '–°–∞–º–º–∞—Ä–∏' in text or '–∞–Ω–∞–ª–∏–∑' in text:
                                has_summary = True
                
                if has_transcription or has_summary:
                    pages_with_content += 1
                    if has_transcription:
                        pages_with_transcription += 1
                    if has_summary:
                        pages_with_summary += 1
                    
                    content_types = []
                    if has_transcription:
                        content_types.append("üìù –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è")
                    if has_summary:
                        content_types.append("üìä –°–∞–º–º–∞—Ä–∏")
                    
                    print(f"  ‚úÖ {title[:50]:<50} | {', '.join(content_types)}")
                
            except Exception as e:
                print(f"  ‚ùå {title[:50]:<50} | –û—à–∏–±–∫–∞: {e}")
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:")
        print(f"  üìù –°—Ç—Ä–∞–Ω–∏—Ü —Å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è–º–∏: {pages_with_transcription}")
        print(f"  üìä –°—Ç—Ä–∞–Ω–∏—Ü —Å —Å–∞–º–º–∞—Ä–∏: {pages_with_summary}")
        print(f"  üìÑ –°—Ç—Ä–∞–Ω–∏—Ü —Å –ª—é–±—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º: {pages_with_content}")
        print(f"  üìÑ –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {len(all_pages)}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ Notion: {e}")
        return False

if __name__ == "__main__":
    success = check_notion_content()
    
    if success:
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)
