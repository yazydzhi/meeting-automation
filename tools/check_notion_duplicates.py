#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –≤ –∑–∞–ø–∏—Å—è—Ö Notion.
"""

import sqlite3
import sys
from collections import defaultdict

def check_notion_duplicates():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã –≤ —Ç–∞–±–ª–∏—Ü–µ notion_sync_status."""
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_path = "data/system_state.db"
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –≤ –∑–∞–ø–∏—Å—è—Ö Notion...")
        print("=" * 60)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
        cursor.execute("""
            SELECT id, event_id, page_id, page_url, sync_status, last_sync, created_at
            FROM notion_sync_status
            ORDER BY created_at DESC
        """)
        
        records = cursor.fetchall()
        print(f"üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ notion_sync_status: {len(records)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ event_id
        event_id_counts = defaultdict(list)
        page_id_counts = defaultdict(list)
        
        for record in records:
            record_id, event_id, page_id, page_url, sync_status, last_sync, created_at = record
            event_id_counts[event_id].append(record)
            if page_id:  # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ page_id –Ω–µ None
                page_id_counts[page_id].append(record)
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ event_id
        print("\nüîç –ê–Ω–∞–ª–∏–∑ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ Event ID:")
        print("-" * 40)
        event_duplicates = {k: v for k, v in event_id_counts.items() if len(v) > 1}
        
        if event_duplicates:
            print(f"‚ùå –ù–∞–π–¥–µ–Ω–æ {len(event_duplicates)} Event ID —Å –¥—É–±–ª–∏–∫–∞—Ç–∞–º–∏:")
            for event_id, records in event_duplicates.items():
                print(f"\n  Event ID: {event_id}")
                for record in records:
                    record_id, _, page_id, page_url, sync_status, last_sync, created_at = record
                    print(f"    ID: {record_id}, Page ID: {page_id[:20] if page_id else 'None'}..., Status: {sync_status}, Created: {created_at}")
        else:
            print("‚úÖ –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ Event ID –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ page_id
        print("\nüîç –ê–Ω–∞–ª–∏–∑ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ Page ID:")
        print("-" * 40)
        page_duplicates = {k: v for k, v in page_id_counts.items() if len(v) > 1}
        
        if page_duplicates:
            print(f"‚ùå –ù–∞–π–¥–µ–Ω–æ {len(page_duplicates)} Page ID —Å –¥—É–±–ª–∏–∫–∞—Ç–∞–º–∏:")
            for page_id, records in page_duplicates.items():
                print(f"\n  Page ID: {page_id}")
                for record in records:
                    record_id, event_id, _, page_url, sync_status, last_sync, created_at = record
                    print(f"    ID: {record_id}, Event ID: {event_id}, Status: {sync_status}, Created: {created_at}")
        else:
            print("‚úÖ –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ Page ID –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ event_id –Ω–æ —Ä–∞–∑–Ω—ã–º–∏ page_id
        print("\nüîç –ê–Ω–∞–ª–∏–∑ –∑–∞–ø–∏—Å–µ–π —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º Event ID –Ω–æ —Ä–∞–∑–Ω—ã–º–∏ Page ID:")
        print("-" * 50)
        event_page_mismatches = []
        
        for event_id, event_records in event_id_counts.items():
            if len(event_records) > 1:
                page_ids = [record[2] for record in event_records]
                if len(set(page_ids)) > 1:
                    event_page_mismatches.append((event_id, event_records))
        
        if event_page_mismatches:
            print(f"‚ùå –ù–∞–π–¥–µ–Ω–æ {len(event_page_mismatches)} Event ID —Å —Ä–∞–∑–Ω—ã–º–∏ Page ID:")
            for event_id, event_records in event_page_mismatches:
                print(f"\n  Event ID: {event_id}")
                for record in event_records:
                    record_id, _, page_id, page_url, sync_status, last_sync, created_at = record
                    print(f"    ID: {record_id}, Page ID: {page_id}, Status: {sync_status}, Created: {created_at}")
        else:
            print("‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º Event ID –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π Page ID")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ —Å –ø—É—Å—Ç—ã–º–∏ page_id
        print("\nüîç –ê–Ω–∞–ª–∏–∑ –∑–∞–ø–∏—Å–µ–π —Å –ø—É—Å—Ç—ã–º–∏ Page ID:")
        print("-" * 40)
        empty_page_records = [record for record in records if not record[2]]  # page_id is None or empty
        if empty_page_records:
            print(f"‚ùå –ù–∞–π–¥–µ–Ω–æ {len(empty_page_records)} –∑–∞–ø–∏—Å–µ–π —Å –ø—É—Å—Ç—ã–º–∏ Page ID:")
            for record in empty_page_records:
                record_id, event_id, page_id, page_url, sync_status, last_sync, created_at = record
                print(f"    ID: {record_id}, Event ID: {event_id}, Status: {sync_status}, Created: {created_at}")
        else:
            print("‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ –∏–º–µ—é—Ç Page ID")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print("-" * 20)
        print(f"–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(records)}")
        print(f"–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö Event ID: {len(event_id_counts)}")
        print(f"–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö Page ID: {len(page_id_counts)}")
        print(f"–ó–∞–ø–∏—Å–µ–π —Å –ø—É—Å—Ç—ã–º–∏ Page ID: {len(empty_page_records)}")
        print(f"–î—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ Event ID: {len(event_duplicates)}")
        print(f"–î—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ Page ID: {len(page_duplicates)}")
        print(f"Event ID —Å —Ä–∞–∑–Ω—ã–º–∏ Page ID: {len(event_page_mismatches)}")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: {e}")
        return False
    
    return True

if __name__ == "__main__":
    check_notion_duplicates()
