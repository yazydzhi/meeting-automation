#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ Notion —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Notion.
"""

import os
import sys
import sqlite3
import requests
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def test_notion_content_adding():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ Notion —Å—Ç—Ä–∞–Ω–∏—Ü—ã."""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ Notion...")
    print("=" * 80)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    notion_token = os.getenv('NOTION_TOKEN')
    notion_database_id = os.getenv('NOTION_DATABASE_ID')
    
    if not notion_token or not notion_database_id:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è NOTION_TOKEN –∏–ª–∏ NOTION_DATABASE_ID")
        return False
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_path = "data/system_state.db"
    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return False
    
    try:
        with sqlite3.connect(db_path) as conn:
            cursor = conn.cursor()
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ —Å Notion —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
            cursor.execute('''
                SELECT 
                    pe.event_id,
                    pe.event_title,
                    nss.page_id
                FROM processed_events pe
                LEFT JOIN notion_sync_status nss ON pe.event_id = nss.event_id
                WHERE nss.page_id IS NOT NULL
                ORDER BY pe.event_start_time DESC
                LIMIT 1
            ''')
            
            result = cursor.fetchone()
            
            if not result:
                print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π —Å Notion —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏")
                return False
            
            event_id, event_title, page_id = result
            
            print(f"üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ —Å–æ–±—ã—Ç–∏–∏: {event_title}")
            print(f"   üÜî Event ID: {event_id}")
            print(f"   üìÑ Page ID: {page_id}")
            print()
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è Notion API
            headers = {
                "Authorization": f"Bearer {notion_token}",
                "Notion-Version": "2022-06-28",
                "Content-Type": "application/json"
            }
            
            # 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏
            print("üìù –¢–µ—Å—Ç 1: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏")
            test_transcript_content = f"""–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –¥–ª—è —Å–æ–±—ã—Ç–∏—è "{event_title}".

–í—Å—Ç—Ä–µ—á–∞ —Å–æ—Å—Ç–æ—è–ª–∞—Å—å –≤ —Ä–∞–º–∫–∞—Ö —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤—Å—Ç—Ä–µ—á.

–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã –æ–±—Å—É–∂–¥–µ–Ω–∏—è:
- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Notion
- –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞

–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ –æ–±—Å—É–∂–¥–∞–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∏ —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.

–ó–∞–∫–ª—é—á–µ–Ω–∏–µ: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ, —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ."""
            
            success1 = _add_test_content_to_page(page_id, "–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –≤—Å—Ç—Ä–µ—á–∏", test_transcript_content, headers)
            print(f"   {'‚úÖ' if success1 else '‚ùå'} –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è {'–¥–æ–±–∞–≤–ª–µ–Ω–∞' if success1 else '–Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞'}")
            print()
            
            # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∞–º–º–∞—Ä–∏
            print("üìä –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∞–º–º–∞—Ä–∏")
            test_summary_content = f"""–ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ –≤—Å—Ç—Ä–µ—á–∏ "{event_title}":

üéØ –¶–µ–ª—å –≤—Å—Ç—Ä–µ—á–∏: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤—Å—Ç—Ä–µ—á

üìã –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ Notion
‚Ä¢ –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API Notion

‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Notion
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
‚Ä¢ API Notion –æ—Ç–≤–µ—á–∞–µ—Ç –±–µ–∑ –æ—à–∏–±–æ–∫

üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫"""
            
            success2 = _add_test_content_to_page(page_id, "–°–∞–º–º–∞—Ä–∏ –∏ –∞–Ω–∞–ª–∏–∑", test_summary_content, headers)
            print(f"   {'‚úÖ' if success2 else '‚ùå'} –°–∞–º–º–∞—Ä–∏ {'–¥–æ–±–∞–≤–ª–µ–Ω–æ' if success2 else '–Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ'}")
            print()
            
            # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞
            print("üîç –¢–µ—Å—Ç 3: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞")
            test_analysis_content = f"""–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—Å—Ç—Ä–µ—á–∏ "{event_title}":

üìà –ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:
‚Ä¢ –í—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è: –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
‚Ä¢ –£—á–∞—Å—Ç–Ω–∏–∫–∏: –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è: –≤—ã—Å–æ–∫–æ–µ

üéØ –ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã:
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Notion —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
‚Ä¢ –ü—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω

‚ö†Ô∏è –í—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:
‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç (—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ –±–µ–∑ –æ—à–∏–±–æ–∫)
‚Ä¢ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–∞–∫ –æ–∂–∏–¥–∞–µ—Ç—Å—è

üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –≤ Notion
‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å API

üìä –ú–µ—Ç—Ä–∏–∫–∏:
‚Ä¢ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: < 1 —Å–µ–∫—É–Ω–¥—ã
‚Ä¢ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π: 100%
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: –≤—ã—Å–æ–∫–æ–µ"""
            
            success3 = _add_test_content_to_page(page_id, "–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑", test_analysis_content, headers)
            print(f"   {'‚úÖ' if success3 else '‚ùå'} –ê–Ω–∞–ª–∏–∑ {'–¥–æ–±–∞–≤–ª–µ–Ω' if success3 else '–Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω'}")
            print()
            
            # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            print("üîç –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞")
            success4 = _check_page_content(page_id, headers)
            print(f"   {'‚úÖ' if success4 else '‚ùå'} –ö–æ–Ω—Ç–µ–Ω—Ç {'–Ω–∞–π–¥–µ–Ω' if success4 else '–Ω–µ –Ω–∞–π–¥–µ–Ω'}")
            print()
            
            # –ò—Ç–æ–≥–∏
            total_tests = 4
            passed_tests = sum([success1, success2, success3, success4])
            
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
            print(f"   ‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: {passed_tests}/{total_tests} —Ç–µ—Å—Ç–æ–≤")
            print(f"   üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {passed_tests/total_tests*100:.1f}%")
            
            if passed_tests == total_tests:
                print("   üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
                return True
            else:
                print("   ‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")
                return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def _add_test_content_to_page(page_id: str, content_type: str, content: str, headers: dict) -> bool:
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—É Notion."""
    
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞–≥–æ–ª–æ–≤–∫–∞
        if "–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è" in content_type:
            heading_emoji = "üìù"
            heading_text = "–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –≤—Å—Ç—Ä–µ—á–∏"
        elif "–°–∞–º–º–∞—Ä–∏" in content_type:
            heading_emoji = "üìä"
            heading_text = "–°–∞–º–º–∞—Ä–∏ –∏ –∞–Ω–∞–ª–∏–∑"
        elif "–∞–Ω–∞–ª–∏–∑" in content_type.lower():
            heading_emoji = "üîç"
            heading_text = "–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑"
        else:
            heading_emoji = "üìã"
            heading_text = content_type
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –±–ª–æ–∫–∏
        blocks = [
            {
                "type": "heading_2",
                "heading_2": {
                    "rich_text": [
                        {
                            "type": "text",
                            "text": {
                                "content": f"{heading_emoji} {heading_text}"
                            }
                        }
                    ]
                }
            },
            {
                "type": "paragraph",
                "paragraph": {
                    "rich_text": [
                        {
                            "type": "text",
                            "text": {
                                "content": content
                            }
                        }
                    ]
                }
            }
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫–∏ –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        blocks_url = f"https://api.notion.com/v1/blocks/{page_id}/children"
        blocks_data = {"children": blocks}
        
        response = requests.patch(blocks_url, headers=headers, json=blocks_data)
        response.raise_for_status()
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è {content_type}: {e}")
        return False

def _check_page_content(page_id: str, headers: dict) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ."""
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –±–ª–æ–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        blocks_url = f"https://api.notion.com/v1/blocks/{page_id}/children"
        blocks_response = requests.get(blocks_url, headers=headers)
        blocks_response.raise_for_status()
        blocks_data = blocks_response.json()
        
        blocks = blocks_data.get('results', [])
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        has_transcription = False
        has_summary = False
        has_analysis = False
        
        for block in blocks:
            if block.get('type') == 'heading_2':
                heading_text = block.get('heading_2', {}).get('rich_text', [])
                if heading_text:
                    text_content = heading_text[0].get('text', {}).get('content', '')
                    if '–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è' in text_content:
                        has_transcription = True
                    elif '–°–∞–º–º–∞—Ä–∏' in text_content:
                        has_summary = True
                    elif '–∞–Ω–∞–ª–∏–∑' in text_content.lower():
                        has_analysis = True
        
        print(f"      üìù –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è: {'‚úÖ' if has_transcription else '‚ùå'}")
        print(f"      üìä –°–∞–º–º–∞—Ä–∏: {'‚úÖ' if has_summary else '‚ùå'}")
        print(f"      üîç –ê–Ω–∞–ª–∏–∑: {'‚úÖ' if has_analysis else '‚ùå'}")
        
        return has_transcription and has_summary and has_analysis
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_notion_content_adding()
    
    if success:
        print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)
