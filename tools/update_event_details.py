#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π —Å–æ–±—ã—Ç–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
–ó–∞–ø–æ–ª–Ω—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ: attendees, meeting_link, calendar_type.
"""

import os
import sys
import sqlite3
import requests
from dotenv import load_dotenv
from datetime import datetime

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def update_event_details():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–µ—Ç–∞–ª–∏ —Å–æ–±—ã—Ç–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    
    try:
        print("üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π —Å–æ–±—ã—Ç–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        print("=" * 60)
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SQLite –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        db_path = "data/system_state.db"
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ processed_events
        cursor.execute("""
            SELECT event_id, event_title, event_start_time, event_end_time, 
                   attendees, meeting_link, calendar_type, account_type
            FROM processed_events
            ORDER BY event_start_time DESC
        """)
        
        events = cursor.fetchall()
        print(f"üìä –°–æ–±—ã—Ç–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {len(events)}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
        missing_attendees = 0
        missing_meeting_link = 0
        missing_calendar_type = 0
        
        for event in events:
            event_id, event_title, event_start_time, event_end_time, attendees, meeting_link, calendar_type, account_type = event
            
            if not attendees:
                missing_attendees += 1
            if not meeting_link:
                missing_meeting_link += 1
            if not calendar_type:
                missing_calendar_type += 1
        
        print(f"\nüìã –ê–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö:")
        print(f"  ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∏: {missing_attendees}")
        print(f"  ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å—Ç—Ä–µ—á–∏: {missing_meeting_link}")
        print(f"  ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–∏–ø –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {missing_calendar_type}")
        
        if missing_attendees == 0 and missing_meeting_link == 0 and missing_calendar_type == 0:
            print("\n‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!")
            return True
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–∞ –æ—Å–Ω–æ–≤–µ event_id
        print(f"\nüîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...")
        
        updated_count = 0
        
        for event in events:
            event_id, event_title, event_start_time, event_end_time, attendees, meeting_link, calendar_type, account_type = event
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–∞ –æ—Å–Ω–æ–≤–µ event_id
            new_calendar_type = calendar_type
            if not new_calendar_type:
                if event_id.startswith('ical_'):
                    new_calendar_type = 'ical_calendar'
                elif event_id.startswith('google_') or '@' in event_id:
                    new_calendar_type = 'google_calendar'
                else:
                    new_calendar_type = 'unknown'
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
            if (not attendees or not meeting_link or not calendar_type) and new_calendar_type:
                cursor.execute('''
                    UPDATE processed_events 
                    SET calendar_type = ?
                    WHERE event_id = ? AND account_type = ?
                ''', (new_calendar_type, event_id, account_type))
                
                updated_count += 1
                print(f"  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω {event_id}: calendar_type = {new_calendar_type}")
        
        conn.commit()
        
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {updated_count}")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–µ–π —Å–æ–±—ã—Ç–∏–π: {e}")
        return False

if __name__ == "__main__":
    success = update_event_details()
    
    if success:
        print("\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π —Å–æ–±—ã—Ç–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)
