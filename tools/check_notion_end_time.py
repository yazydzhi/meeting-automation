#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á –≤ Notion.
"""

import os
import sys
import sqlite3
import requests
from dotenv import load_dotenv
from datetime import datetime

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def check_notion_end_time():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á –≤ Notion."""
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    notion_token = os.getenv('NOTION_TOKEN')
    database_id = os.getenv('NOTION_DATABASE_ID')
    
    if not notion_token or not database_id:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è NOTION_TOKEN –∏–ª–∏ NOTION_DATABASE_ID")
        return False
    
    try:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è API
        headers = {
            "Authorization": f"Bearer {notion_token}",
            "Content-Type": "application/json",
            "Notion-Version": "2022-06-28"
        }
        
        print("üïê –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á –≤ Notion...")
        print("=" * 70)
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SQLite –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        db_path = "data/system_state.db"
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –∏–∑ SQLite
        cursor.execute("""
            SELECT event_id, event_title, event_start_time, event_end_time, account_type
            FROM processed_events
            ORDER BY event_start_time DESC
        """)
        
        sqlite_events = cursor.fetchall()
        print(f"üìä –°–æ–±—ã—Ç–∏–π –≤ SQLite: {len(sqlite_events)}")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ Notion
        all_pages = []
        has_more = True
        start_cursor = None
        
        while has_more:
            url = f"https://api.notion.com/v1/databases/{database_id}/query"
            payload = {
                "page_size": 100
            }
            if start_cursor:
                payload["start_cursor"] = start_cursor
            
            response = requests.post(url, headers=headers, json=payload)
            response.raise_for_status()
            
            data = response.json()
            all_pages.extend(data['results'])
            has_more = data['has_more']
            start_cursor = data.get('next_cursor')
        
        print(f"üìä –°—Ç—Ä–∞–Ω–∏—Ü –≤ Notion: {len(all_pages)}")
        print()
        
        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å–æ–±—ã—Ç–∏–π SQLite –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
        sqlite_dict = {}
        for event in sqlite_events:
            event_id, event_title, event_start_time, event_end_time, account_type = event
            sqlite_dict[event_id] = {
                'title': event_title,
                'start_time': event_start_time,
                'end_time': event_end_time,
                'account_type': account_type
            }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É Notion
        missing_end_time = []
        mismatched_end_time = []
        correct_end_time = []
        
        for page in all_pages:
            page_id = page['id']
            properties = page['properties']
            
            # –ü–æ–ª—É—á–∞–µ–º Event ID
            event_id = ""
            if 'Event ID' in properties:
                event_id_prop = properties['Event ID']
                if event_id_prop['type'] == 'rich_text' and event_id_prop['rich_text']:
                    event_id = event_id_prop['rich_text'][0]['text']['content']
            
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            title = ""
            if 'Name' in properties:
                title_prop = properties['Name']
                if title_prop['type'] == 'title' and title_prop['title']:
                    title = title_prop['title'][0]['text']['content']
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–∑ Notion (–∏–∑ –ø–æ–ª—è Date)
            notion_end_time = ""
            if 'Date' in properties:
                date_prop = properties['Date']
                if date_prop['type'] == 'date' and date_prop.get('date'):
                    notion_end_time = date_prop['date'].get('end', '')
            
            # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å SQLite
            if event_id and event_id in sqlite_dict:
                sqlite_data = sqlite_dict[event_id]
                sqlite_end_time = sqlite_data['end_time']
                
                if not notion_end_time:
                    missing_end_time.append({
                        'title': title,
                        'event_id': event_id,
                        'sqlite_end_time': sqlite_end_time
                    })
                else:
                    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Ñ–æ—Ä–º–∞—Ç—ã –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (—É–±–∏—Ä–∞–µ–º –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã)
                    notion_normalized = notion_end_time.replace('.000', '') if '.000' in notion_end_time else notion_end_time
                    sqlite_normalized = sqlite_end_time.replace('.000', '') if '.000' in sqlite_end_time else sqlite_end_time
                    
                    if notion_normalized != sqlite_normalized:
                        mismatched_end_time.append({
                            'title': title,
                            'event_id': event_id,
                            'notion_end_time': notion_end_time,
                            'sqlite_end_time': sqlite_end_time
                        })
                    else:
                        correct_end_time.append({
                            'title': title,
                            'event_id': event_id,
                            'end_time': notion_end_time
                        })
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è:")
        print("-" * 70)
        
        if missing_end_time:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è ({len(missing_end_time)} —Å—Ç—Ä–∞–Ω–∏—Ü):")
            for item in missing_end_time[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                print(f"  ‚Ä¢ {item['title'][:50]:<50} | SQLite: {item['sqlite_end_time']}")
            if len(missing_end_time) > 10:
                print(f"    ... –∏ –µ—â–µ {len(missing_end_time) - 10} —Å—Ç—Ä–∞–Ω–∏—Ü")
            print()
        
        if mismatched_end_time:
            print(f"‚ö†Ô∏è –ù–µ—Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è ({len(mismatched_end_time)} —Å—Ç—Ä–∞–Ω–∏—Ü):")
            for item in mismatched_end_time[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"  ‚Ä¢ {item['title'][:40]:<40}")
                print(f"    Notion: {item['notion_end_time']}")
                print(f"    SQLite: {item['sqlite_end_time']}")
            if len(mismatched_end_time) > 5:
                print(f"    ... –∏ –µ—â–µ {len(mismatched_end_time) - 5} —Å—Ç—Ä–∞–Ω–∏—Ü")
            print()
        
        if correct_end_time:
            print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è ({len(correct_end_time)} —Å—Ç—Ä–∞–Ω–∏—Ü):")
            for item in correct_end_time[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"  ‚Ä¢ {item['title'][:50]:<50} | {item['end_time']}")
            if len(correct_end_time) > 5:
                print(f"    ... –∏ –µ—â–µ {len(correct_end_time) - 5} —Å—Ç—Ä–∞–Ω–∏—Ü")
            print()
        
        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        total_checked = len(missing_end_time) + len(mismatched_end_time) + len(correct_end_time)
        print("üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"  üìÑ –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {total_checked}")
        print(f"  ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: {len(missing_end_time)}")
        print(f"  ‚ö†Ô∏è –ù–µ—Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏: {len(mismatched_end_time)}")
        print(f"  ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: {len(correct_end_time)}")
        
        if total_checked > 0:
            success_rate = (len(correct_end_time) / total_checked) * 100
            print(f"  üìà –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏: {success_rate:.1f}%")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤ Notion: {e}")
        return False

if __name__ == "__main__":
    success = check_notion_end_time()
    
    if success:
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)
