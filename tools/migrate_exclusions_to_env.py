#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç .env.
"""

import os
import sys
from typing import List, Dict

def read_exclusions_file(file_path: str) -> List[str]:
    """
    –ß–∏—Ç–∞–µ—Ç —Ñ–∞–π–ª –∏—Å–∫–ª—é—á–µ–Ω–∏–π.
    
    Args:
        file_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
        
    Returns:
        –°–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    """
    exclusions = []
    
    if not os.path.exists(file_path):
        return exclusions
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            for line in f:
                line = line.strip()
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
                if line and not line.startswith('#'):
                    exclusions.append(line)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {file_path}: {e}")
    
    return exclusions

def generate_env_exclusions(work_exclusions: List[str], personal_exclusions: List[str]) -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É –∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è .env —Ñ–∞–π–ª–∞.
    
    Args:
        work_exclusions: –ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—á–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        personal_exclusions: –ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        
    Returns:
        –°—Ç—Ä–æ–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ .env
    """
    env_exclusions = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    for exclusion in personal_exclusions:
        env_exclusions.append(f"personal:keyword:{exclusion}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—á–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    for exclusion in work_exclusions:
        env_exclusions.append(f"work:keyword:{exclusion}")
    
    return ",".join(env_exclusions)

def update_env_file(env_exclusions: str, env_file_path: str = ".env") -> bool:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç .env —Ñ–∞–π–ª —Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º–∏.
    
    Args:
        env_exclusions: –°—Ç—Ä–æ–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        env_file_path: –ü—É—Ç—å –∫ .env —Ñ–∞–π–ª—É
        
    Returns:
        True –µ—Å–ª–∏ —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ
    """
    try:
        # –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env —Ñ–∞–π–ª
        existing_lines = []
        if os.path.exists(env_file_path):
            with open(env_file_path, 'r', encoding='utf-8') as f:
                existing_lines = f.readlines()
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ EVENT_EXCLUSIONS
        filtered_lines = []
        for line in existing_lines:
            if not line.strip().startswith('EVENT_EXCLUSIONS='):
                filtered_lines.append(line)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
        filtered_lines.append(f"EVENT_EXCLUSIONS={env_exclusions}\n")
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open(env_file_path, 'w', encoding='utf-8') as f:
            f.writelines(filtered_lines)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env —Ñ–∞–π–ª–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏."""
    print("üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç .env...")
    print("=" * 60)
    
    # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    work_exclusions_file = "config/work_exclusions.txt"
    personal_exclusions_file = "config/personal_exclusions.txt"
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    print("üìñ –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏—Å–∫–ª—é—á–µ–Ω–∏–π...")
    work_exclusions = read_exclusions_file(work_exclusions_file)
    personal_exclusions = read_exclusions_file(personal_exclusions_file)
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–π:")
    print(f"  üîß –†–∞–±–æ—á–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å: {len(work_exclusions)}")
    print(f"  üë§ –õ–∏—á–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å: {len(personal_exclusions)}")
    
    if not work_exclusions and not personal_exclusions:
        print("‚ö†Ô∏è –§–∞–π–ª—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–π –ø—É—Å—Ç—ã –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
    if work_exclusions:
        print(f"\nüîß –ò—Å–∫–ª—é—á–µ–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:")
        for exclusion in work_exclusions:
            print(f"  ‚Ä¢ {exclusion}")
    
    if personal_exclusions:
        print(f"\nüë§ –ò—Å–∫–ª—é—á–µ–Ω–∏—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:")
        for exclusion in personal_exclusions:
            print(f"  ‚Ä¢ {exclusion}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è .env
    env_exclusions = generate_env_exclusions(work_exclusions, personal_exclusions)
    
    print(f"\nüìù –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è .env:")
    print(f"EVENT_EXCLUSIONS={env_exclusions}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ .env —Ñ–∞–π–ª
    env_file = ".env"
    if not os.path.exists(env_file):
        print(f"\n‚ö†Ô∏è –§–∞–π–ª {env_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üí° –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ env.example –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é —Å–Ω–æ–≤–∞")
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª
    print(f"\nüìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ {env_file}...")
    if update_env_file(env_exclusions, env_file):
        print("‚úÖ .env —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω")
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã
        print(f"\nüóëÔ∏è –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–π:")
        print(f"  ‚Ä¢ {work_exclusions_file}")
        print(f"  ‚Ä¢ {personal_exclusions_file}")
        
        response = input("\n‚ùì –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–π? (y/N): ").strip().lower()
        if response in ['y', 'yes', '–¥–∞']:
            try:
                if os.path.exists(work_exclusions_file):
                    os.remove(work_exclusions_file)
                    print(f"‚úÖ –£–¥–∞–ª–µ–Ω: {work_exclusions_file}")
                
                if os.path.exists(personal_exclusions_file):
                    os.remove(personal_exclusions_file)
                    print(f"‚úÖ –£–¥–∞–ª–µ–Ω: {personal_exclusions_file}")
                
                print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤: {e}")
        else:
            print("‚ÑπÔ∏è –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env —Ñ–∞–π–ª–∞")

if __name__ == "__main__":
    main()
