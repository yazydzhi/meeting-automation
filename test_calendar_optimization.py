#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π.
"""

import sys
import os
import json
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

try:
    from config_manager import ConfigManager
    from calendar_handler import CalendarHandler
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –º–æ–¥—É–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    sys.exit(1)


def test_cache_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫—ç—à–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π."""
    print("üîç –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫—ç—à–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        config_manager = ConfigManager()
        calendar_handler = CalendarHandler(config_manager)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫—ç—à –∑–∞–≥—Ä—É–∂–µ–Ω
        if hasattr(calendar_handler, 'processed_events_cache'):
            print("‚úÖ –ö—ç—à –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—ã—Ç–∏–π –≤ –∫—ç—à–µ: {len(calendar_handler.processed_events_cache.get('events', {}))}")
        else:
            print("‚ùå –ö—ç—à –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        if hasattr(calendar_handler, 'last_sync_time'):
            print("‚úÖ –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ")
            print(f"   –õ–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç: {calendar_handler.last_sync_time.get('personal', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}")
            print(f"   –†–∞–±–æ—á–∏–π –∞–∫–∫–∞—É–Ω—Ç: {calendar_handler.last_sync_time.get('work', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}")
        else:
            print("‚ùå –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ")
            return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False


def test_cache_operations():
    """–¢–µ—Å—Ç –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∫—ç—à–µ–º."""
    print("\nüîß –¢–µ—Å—Ç –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∫—ç—à–µ–º")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        config_manager = ConfigManager()
        calendar_handler = CalendarHandler(config_manager)
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
        from calendar_alternatives import CalendarEvent
        
        test_event = CalendarEvent(
            title="–¢–µ—Å—Ç–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞",
            start=datetime.now(),
            end=datetime.now() + timedelta(hours=1),
            description="–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—Å—Ç—Ä–µ—á–∏",
            location="–¢–µ—Å—Ç–æ–≤–æ–µ –º–µ—Å—Ç–æ",
            attendees=["test@example.com"],
            meeting_link="https://meet.google.com/test",
            calendar_source="test",
            event_id="test_123"
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–±—ã—Ç–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
        is_processed = calendar_handler._is_event_processed(test_event, "personal")
        print(f"üìã –°–æ–±—ã—Ç–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {is_processed}")
        
        if is_processed:
            print("‚ùå –°–æ–±—ã—Ç–∏–µ —É–∂–µ –ø–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å)")
            return False
        
        # –û—Ç–º–µ—á–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ
        test_result = {
            'title': test_event.title,
            'start': test_event.start,
            'end': test_event.end,
            'attendees_count': len(test_event.attendees)
        }
        
        calendar_handler._mark_event_processed(test_event, "personal", test_result)
        print("‚úÖ –°–æ–±—ã—Ç–∏–µ –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–±—ã—Ç–∏–µ —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
        is_processed = calendar_handler._is_event_processed(test_event, "personal")
        print(f"üìã –°–æ–±—ã—Ç–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø–æ—Å–ª–µ –æ—Ç–º–µ—Ç–∫–∏: {is_processed}")
        
        if not is_processed:
            print("‚ùå –°–æ–±—ã—Ç–∏–µ –Ω–µ –ø–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –ø–æ—Å–ª–µ –æ—Ç–º–µ—Ç–∫–∏")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∫—ç—à–∞
        cache_size = len(calendar_handler.processed_events_cache.get('events', {}))
        print(f"üìä –†–∞–∑–º–µ—Ä –∫—ç—à–∞: {cache_size} —Å–æ–±—ã—Ç–∏–π")
        
        if cache_size == 0:
            print("‚ùå –ö—ç—à –ø—É—Å—Ç –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è")
            return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∫—ç—à–µ–º: {e}")
        return False


def test_cache_persistence():
    """–¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—ç—à–∞."""
    print("\nüíæ –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—ç—à–∞")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        config_manager = ConfigManager()
        calendar_handler = CalendarHandler(config_manager)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫—ç—à
        calendar_handler._save_processed_events_cache()
        print("‚úÖ –ö—ç—à —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω
        cache_file = Path('data/processed_events_cache.json')
        if cache_file.exists():
            print(f"‚úÖ –§–∞–π–ª –∫—ç—à–∞ —Å–æ–∑–¥–∞–Ω: {cache_file}")
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
            with open(cache_file, 'r', encoding='utf-8') as f:
                cache_content = json.load(f)
            
            print(f"üìä –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫—ç—à–∞: {len(cache_content.get('events', {}))} —Å–æ–±—ã—Ç–∏–π")
            print(f"üïí –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {cache_content.get('last_updated', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}")
        else:
            print("‚ùå –§–∞–π–ª –∫—ç—à–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω")
            return False
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        calendar_handler._save_last_sync_time()
        print("‚úÖ –í—Ä–µ–º—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω
        sync_file = Path('data/last_sync_time.json')
        if sync_file.exists():
            print(f"‚úÖ –§–∞–π–ª –≤—Ä–µ–º–µ–Ω–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω: {sync_file}")
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
            with open(sync_file, 'r', encoding='utf-8') as f:
                sync_content = json.load(f)
            
            print(f"üìä –í—Ä–µ–º—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ª–∏—á–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞: {sync_content.get('personal', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}")
            print(f"üìä –í—Ä–µ–º—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—á–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞: {sync_content.get('work', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}")
        else:
            print("‚ùå –§–∞–π–ª –≤—Ä–µ–º–µ–Ω–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω")
            return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—ç—à–∞: {e}")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π")
    print("=" * 80)
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∫—ç—à–∞
    if not test_cache_creation():
        print("\n‚ùå –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫—ç—à–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
        return False
    
    # –¢–µ—Å—Ç 2: –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫—ç—à–µ–º
    if not test_cache_operations():
        print("\n‚ùå –¢–µ—Å—Ç –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∫—ç—à–µ–º –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
        return False
    
    # –¢–µ—Å—Ç 3: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫—ç—à–∞
    if not test_cache_persistence():
        print("\n‚ùå –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—ç—à–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
        return False
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("‚úÖ –°–æ–±—ã—Ç–∏—è –Ω–µ –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–æ")
    print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö")
    
    return True


if __name__ == "__main__":
    from pathlib import Path
    success = main()
    sys.exit(0 if success else 1)
