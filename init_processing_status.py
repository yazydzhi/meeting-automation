#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤ —Å—Ç–∞—Ç—É—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ –≤—Å–µ—Ö –ø–∞–ø–∫–∞—Ö.
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, 'src')

from processing_status import ProcessingStatus

def init_all_processing_status():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ø–∞–ø–æ–∫."""
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–ø–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    base_paths = [
        "/Users/azg/Downloads/01 - yazydzhi@gmail.com",
        "/Users/azg/Downloads/02 - work@company.com"
    ]
    
    for base_path in base_paths:
        base_path_obj = Path(base_path)
        if not base_path_obj.exists():
            print(f"‚ö†Ô∏è –ë–∞–∑–æ–≤–∞—è –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {base_path}")
            continue
            
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É: {base_path}")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ–¥–ø–∞–ø–∫–∏
        try:
            subfolders = [f for f in base_path_obj.iterdir() if f.is_dir()]
            print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ –ø–æ–¥–ø–∞–ø–æ–∫: {len(subfolders)}")
            
            for subfolder in subfolders:
                print(f"\nüìÇ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥–ø–∞–ø–∫—É: {subfolder.name}")
                
                # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å –¥–ª—è –ø–æ–¥–ø–∞–ø–∫–∏
                status = ProcessingStatus(str(subfolder))
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
                video_files = list(subfolder.glob("*.mov")) + list(subfolder.glob("*.mp4")) + list(subfolder.glob("*.avi"))
                audio_files = list(subfolder.glob("*.mp3")) + list(subfolder.glob("*.wav"))
                
                print(f"   üé¨ –í–∏–¥–µ–æ —Ñ–∞–π–ª—ã: {len(video_files)}")
                print(f"   üéµ –ê—É–¥–∏–æ —Ñ–∞–π–ª—ã: {len(audio_files)}")
                
                # –ï—Å–ª–∏ –µ—Å—Ç—å –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
                for video_file in video_files:
                    if 'compressed' not in video_file.name.lower():
                        print(f"   üìù –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ: {video_file.name}")
                        status.add_file(str(video_file), 'video')
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–∂–∞—Ç—ã–µ –≤–µ—Ä—Å–∏–∏
                        compressed_video = subfolder / f"{video_file.stem}_compressed.mp4"
                        compressed_audio = subfolder / f"{video_file.stem}_compressed.mp3"
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç—Ç–∞–ø—ã
                        video_processed = compressed_video.exists()
                        audio_processed = compressed_audio.exists()
                        
                        # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç—Ç–∞–ø—ã
                        if video_processed:
                            print(f"      ‚úÖ –°–∂–∞—Ç–æ–µ –≤–∏–¥–µ–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {compressed_video.name}")
                            # –ü—Ä–æ—Å—Ç–æ –æ—Ç–º–µ—á–∞–µ–º, —á—Ç–æ —ç—Ç–∞–ø —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
                            print(f"      ‚è≠Ô∏è –≠—Ç–∞–ø video_compression —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                        
                        if audio_processed:
                            print(f"      ‚úÖ –ê—É–¥–∏–æ —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {compressed_audio.name}")
                            status.mark_file_processed(
                                video_file.name, 
                                'audio_extraction',
                                [str(compressed_audio)]
                            )
                        else:
                            print(f"      ‚ùå –ê—É–¥–∏–æ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω - —Ñ–∞–π–ª —á–∞—Å—Ç–∏—á–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
                            # –û—Ç–º–µ—á–∞–µ–º —ç—Ç–∞–ø –∫–∞–∫ –Ω–µ—É–¥–∞—á–Ω—ã–π, —á—Ç–æ–±—ã —Å–∏—Å—Ç–µ–º–∞ –∑–Ω–∞–ª–∞, —á—Ç–æ –Ω—É–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å
                            status.mark_file_failed(
                                video_file.name,
                                'audio_extraction',
                                '–ê—É–¥–∏–æ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω - –≤–æ–∑–º–æ–∂–Ω–æ, –∏—Å—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∞—É–¥–∏–æ'
                            )
                            
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏
                        transcript_files = list(subfolder.glob("*.txt")) + list(subfolder.glob("*.md")) + list(subfolder.glob("*.csv"))
                        transcript_processed = any('transcript' in f.name.lower() or 'transcription' in f.name.lower() for f in transcript_files)
                        
                        if transcript_processed:
                            print(f"      ‚úÖ –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞")
                            status.mark_file_processed(
                                video_file.name, 
                                'transcription',
                                [str(f) for f in transcript_files if 'transcript' in f.name.lower() or 'transcription' in f.name.lower()]
                            )
                        else:
                            print(f"      ‚ùå –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                            status.mark_file_failed(
                                video_file.name,
                                'transcription',
                                '–§–∞–π–ª—ã —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'
                            )
                        
                        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ñ–∞–π–ª–∞
                        status.update_file_status(video_file.name)
                        
                        # –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
                        current_status = status.get_file_status(video_file.name)
                        if current_status:
                            print(f"      üìä –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {current_status['status']}")
                            
                        if video_processed and audio_processed and transcript_processed:
                            print(f"      ‚úÖ –§–∞–π–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
                        elif video_processed:
                            print(f"      üîÑ –§–∞–π–ª —á–∞—Å—Ç–∏—á–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω (—Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ)")
                        else:
                            print(f"      ‚ùå –§–∞–π–ª –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
                    else:
                        print(f"   ‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ —Å–∂–∞—Ç—ã–π —Ñ–∞–π–ª: {video_file.name}")
                
                # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é —Å–≤–æ–¥–∫—É
                status.print_summary()
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∞–ø–∫–∏ {base_path}: {e}")

if __name__ == "__main__":
    init_all_processing_status()
